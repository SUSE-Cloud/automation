- job:
    name: 'openstack-trackupstream'
    project-type: matrix

    triggers:
      - timed: 'H 1 * * *'

    axes:
      - axis:
          type: user-defined
          name: project
          values:
            - Cloud:OpenStack:Kilo:Staging
            - Cloud:OpenStack:Liberty:Staging
            - Cloud:OpenStack:Mitaka:Staging
            - Cloud:OpenStack:Newton:Staging
            - Cloud:OpenStack:Master
      - axis:
          type: user-defined
          name: component
          values:
            - openstack-aodh
            - openstack-barbican
            - openstack-ceilometer
            - openstack-cinder
            - openstack-dashboard
            - openstack-designate
            - openstack-ec2-api
            - openstack-glance
            - openstack-gnocchi
            - openstack-heat
            - openstack-heat-gbp
            - openstack-heat-templates
            - openstack-horizon-plugin-designate-ui
            - openstack-horizon-plugin-gbp-ui
            - openstack-horizon-plugin-ironic-ui
            - openstack-horizon-plugin-manila-ui
            - openstack-horizon-plugin-magnum-ui
            - openstack-ironic
            - openstack-keystone
            - openstack-manila
            - openstack-magnum
            - openstack-murano
            - openstack-neutron
            - openstack-neutron-fwaas
            - openstack-neutron-gbp
            - openstack-neutron-lbaas
            - openstack-neutron-vpnaas
            - openstack-neutron-zvm-agent
            - openstack-nova
            - openstack-nova-docker
            - openstack-nova-virt-zvm
            - openstack-octavia
            - openstack-quickstart
            - openstack-resource-agents
            - openstack-sahara
            - openstack-swift
            - openstack-tempest
            - openstack-trove
            - openstack-utils
            - openstack-zaqar
            - python-heat-cfntools
            - python-networking-cisco
            - python-networking-hyperv
            - tripleo-image-elements
            - tripleo-heat-templates
      - axis:
          type: slave
          name: slave
          values:
            - cloud-trackupstream
    execution-strategy:
      combination-filter: |
        ! ( [ "Cloud:OpenStack:Kilo:Staging"].contains(project) &&
            [ "openstack-aodh",
              "openstack-horizon-plugin-designate-ui",
              "openstack-gnocchi",
              "openstack-heat-gbp",
              "openstack-horizon-plugin-gbp-ui",
              "openstack-neutron-gbp",
              "openstack-neutron-lbaas",
              "openstack-neutron-fwaas",
              "openstack-neutron-vpnaas",
              "openstack-neutron-zvm-agent",
              "openstack-nova-virt-zvm",
              "openstack-ec2-api",
              "python-networking-cisco",
              "python-networking-hyperv" ].contains(component) ||
            [ "Cloud:OpenStack:Liberty:Staging", "Cloud:OpenStack:Kilo:Staging" ].contains(project) &&
            [ "openstack-magnum",
              "openstack-barbican",
              "openstack-horizon-plugin-ironic-ui",
              "openstack-horizon-plugin-magnum-ui",
              "openstack-octavia",
            ].contains(component) ||
            [ "Cloud:OpenStack:Liberty:Staging", "Cloud:OpenStack:Kilo:Staging", "Cloud:OpenStack:Mitaka" ].contains(project) &&
            [ "openstack-murano",
            ].contains(component) ||
            [ "Cloud:OpenStack:Newton:Staging", "Cloud:OpenStack:Mitaka:Staging", "Cloud:OpenStack:Liberty:Staging", "Cloud:OpenStack:Kilo:Staging"].contains(project) &&
            [
              "python-heat-cfntools",
              "openstack-zaqar",
            ].contains(component)
            )
      sequential: true
    builders:
      - update-automation
      - shell: |
          PROJECTSOURCE=OBS/${project}
          COMPONENT=$component

          # needs .oscrc with user,pass,trusted_prj
          # zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools/SLE_12/openSUSE:Tools.repo
          # zypper ar SDK # for git
          zypper -n in osc obs-service-tar_scm obs-service-github_tarballs obs-service-recompress obs-service-git_tarballs \
              obs-service-set_version obs-service-refresh_patches obs-service-python_requires python-setuptools
          [ -z "$PROJECTSOURCE" ] && ( echo "Error: no PROJECTSOURCE defined." ; exit 1 )

          OBS_TYPE=${PROJECTSOURCE%%/*}
          OBS_PROJECT=${PROJECTSOURCE##*/}

          case $OBS_TYPE in
            OBS) OSCAPI="https://api.opensuse.org"
                OSC_BUILD_ARCH=x86_64
                case $OBS_PROJECT in
                    Cloud:OpenStack:Master|Cloud:OpenStack:Newton*)
                        OSC_BUILD_DIST=SLE_12_SP2
                        ;;
                    Cloud:OpenStack:Mitaka*|Cloud:OpenStack:Liberty*)
                        OSC_BUILD_DIST=SLE_12_SP1
                        ;;
                    Cloud:OpenStack:Kilo*)
                        OSC_BUILD_DIST=SLE_12
                        ;;
                    *)
                        OSC_BUILD_DIST=SLE_11_SP3
                        ;;
                esac
                ;;
            *)   echo "This jenkins instance only interacts with OBS."
                exit 1
                ;;
          esac

          # remove accidentally added spaces
          COMPONENT=${COMPONENT// /}
          OBS_PROJECT=${OBS_PROJECT// /}

          if [ -z "$COMPONENT" ] ; then
            echo "Error: Variable COMPONENT is unset."
            exit 1
          fi

          export OSCAPI
          export OSC_BUILD_DIST
          export OSC_BUILD_ARCH

          export JHOME=/home/jenkins
          export OBS_CHECKOUT=$JHOME/OBS_CHECKOUT/$OBS_PROJECT
          export OSC_BUILD_ROOT=$JHOME/buildroot

          mkdir -p ~/.obs
          for i in incoming repo repourl
          do
            mkdir -p $JHOME/obscache/tar_scm/$i
          done
          echo "CACHEDIRECTORY=\"$JHOME/obscache/tar_scm\"" > ~/.obs/tar_scm

          mkdir -p "$OBS_CHECKOUT"
          cd "$OBS_CHECKOUT"

          rm -rf "$COMPONENT"
          osc -A $OSCAPI co -c "$OBS_PROJECT" "$COMPONENT"

          [ -d "$COMPONENT" ] || ( echo "Error: Component $COMPONENT does not exist (yet) or has been removed."  ; exit 1 )
          cd "$COMPONENT"

          set +e
          if [ ${OBS_PROJECT} != "Cloud:OpenStack:Master" ] ; then
            # skip test in C:O:M as we do not have linked packages there
            grep -q "<linkinfo" .osc/_files || exit 2
          fi
          /root/github.com/SUSE-Cloud/automation/scripts/jenkins/track-upstream-and-package.pl
