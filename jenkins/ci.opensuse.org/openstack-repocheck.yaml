- job:
    name: 'openstack-repocheck'
    project-type: matrix

    triggers:
      - timed: '@hourly'

    logrotate:
      numToKeep: 10
      daysToKeep: -1

    axes:
      - axis:
          type: user-defined
          name: project
          values:
            - Cloud:OpenStack:Pike
            - Cloud:OpenStack:Pike:Staging
            - Cloud:OpenStack:Rocky
            - Cloud:OpenStack:Rocky:Staging
            - Cloud:OpenStack:Train
            - Cloud:OpenStack:Train:Staging
            - Cloud:OpenStack:Master
            - Cloud:Tools
      - axis:
          type: user-defined
          name: repository
          values:
            - SLE_12_SP2
            - SLE_12_SP3
            - SLE_12_SP4
            - SLE_15
            - SLE_15_SP1
            - openSUSE_Leap_42.3
            - openSUSE_Leap_15.0
            - openSUSE_Leap_15.1
      - axis:
          type: slave
          name: nodes
          values:
            - cloud-trackupstream
    execution-strategy:
      # NOTE: Be careful! These are "reversed" filters. i.e. add a platform
      # to a branch here only if you want to "exclude" it for the given branch.
      combination-filter: |
       !(["Cloud:OpenStack:Master"].contains(project) && ["SLE_12_SP2"].contains(repository) ||
         ["Cloud:OpenStack:Newton", "Cloud:OpenStack:Newton:Staging"].contains(project) && ["openSUSE_Leap_42.3", "openSUSE_Leap_15.0", "openSUSE_Leap_15.1", "SLE_12_SP4", "SLE_15", "SLE_15_SP1"].contains(repository) ||
         ["Cloud:OpenStack:Pike", "Cloud:OpenStack:Pike:Staging"].contains(project) && ["openSUSE_Leap_15.0", "openSUSE_Leap_15.1", "SLE_12_SP2", "SLE_12_SP4", "SLE_15", "SLE_15_SP1"].contains(repository) ||
         ["Cloud:OpenStack:Queens", "Cloud:OpenStack:Queens:Staging"].contains(project) && ["openSUSE_Leap_15.0", "openSUSE_Leap_15.1", "SLE_12_SP2", "SLE_12_SP4", "SLE_15", "SLE_15_SP1"].contains(repository) ||
         ["Cloud:OpenStack:Rocky", "Cloud:OpenStack:Rocky:Staging"].contains(project) && ["SLE_12_SP2", "SLE_12_SP3", "SLE_15", "SLE_15_SP1"].contains(repository) ||
         ["Cloud:OpenStack:Stein", "Cloud:OpenStack:Stein:Staging"].contains(project) && ["openSUSE_Leap_42.3", "openSUSE_Leap_15.1", "SLE_12_SP2", "SLE_12_SP3", "SLE_12_SP4", "SLE_15_SP1"].contains(repository) ||
         ["Cloud:OpenStack:Train", "Cloud:OpenStack:Train:Staging"].contains(project) && ["openSUSE_Leap_42.3", "openSUSE_Leap_15.0", "SLE_12_SP2", "SLE_12_SP3", "SLE_12_SP4", "SLE_15"].contains(repository)
       )
      sequential: true
    builders:
      - update-automation
      - shell: |
          PROJECTSOURCE=OBS/${project}

          # needs .oscrc with user,pass,trusted_prj
          # zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools/SLE_11_SP2/openSUSE:Tools.repo
          # zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools:/Unstable/SLE_11_SP2/openSUSE:Tools:Unstable.repo
          # zypper in osc obs-service-tar_scm obs-service-github_tarballs obs-service-recompress obs-service-git_tarballs obs-service-set_version
          [ -z "$PROJECTSOURCE" ] && ( echo "Error: no PROJECTSOURCE defined." ; exit 1 )

          export automationrepo=~/github.com/SUSE-Cloud/automation

          # Workaround to get only the name of the job:
          # https://issues.jenkins-ci.org/browse/JENKINS-39189
          # When the JOB_BASE_NAME contains only in ex. "openstack-repocheck", this
          # workaround can be removed.
          echo "$JOB_BASE_NAME"
          main_job_name=${JOB_NAME%%/*}

          DIST_NAME=$(echo $repository|cut -d "_" -f 1)
          DIST_VERSION=$(echo $repository|cut -d "_" -f 2-)

          OBS_TYPE=${PROJECTSOURCE%%/*}
          OBS_PROJECT=${PROJECTSOURCE##*/}

          case $OBS_TYPE in
            OBS) OSCAPI="https://api.opensuse.org"
                OSC_BUILD_ARCH=x86_64
                OSC_BUILD_DIST=SLE_11_SP3
                ;;
            *)   echo "This jenkins instance only interacts with OBS."
                exit 1
                ;;
          esac

          fetch_primary_xml()
          {
              local repo=$1
              disturl=$2
              local host="http://download.opensuse.org/repositories/"
              test -n "$3" && host=$3
              mkdir -p tmp/repo
              rm -rf tmp/repo/repomd.xml tmp/repo/primary.xml.gz
              curl -fs $host/$repo/$disturl/repodata/repomd.xml > tmp/repo/repomd.xml
              primary=$(grep "location.*primary.xml" tmp/repo/repomd.xml | cut -d'"' -f2)
              curl -Lfs $host/$repo/$disturl/$primary > tmp/repo/primary.xml.gz
              test -s tmp/repo/primary.xml.gz || { echo "failed to download primary.xml!"; rm -f tmp/repo/primary.xml.gz; exit 1; }
              rm -f tmp/repo/repomd.xml
          }

          ARCH=x86_64

          slashed_project=$(echo $project | sed -e 's,:,:\/,g')
          non_staging_project=${slashed_project%%:/Staging}

          EXTRA_NOCHECK=""

          if [ "$slashed_project" != "$non_staging_project" ]; then
            EXTRA_NOCHECK="tmp/repo/nonstaging_primary.xml.gz"
            fetch_primary_xml $non_staging_project $repository
            mv tmp/repo/primary.xml.gz $EXTRA_NOCHECK
          fi

          fetch_primary_xml $slashed_project $repository

          test -e ~/repo || { echo "~/repo needs to have a copy of pre-generated .solv files from internal media" ; exit 55; }
          EXCLUDE=""
          # TODO why exclude this?, this was here without comment
          EXCLUDE+=" -kmp-"
          if [[ "$project == Cloud:OpenStack:Rocky" ]]; then
            # part of openstack-heat-agents, don't want to disable these binary packages
            # Requires puppet , don't want to copy it into Rocky
            EXCLUDE+=" python-heat-agent-puppet"
            # Requires python-paunch , not packaged yet
            EXCLUDE+=" python-heat-agent-docker-cmd"
            # we don't need this binary package, but needed one built from the same source to build some python3 package, Requires texlive stuff
            EXCLUDE+=" python-matplotlib-latex python3-matplotlib-latex"
            # needed to build some python3 package, Requires this-is-only-for-build-envs
            EXCLUDE+=" python-requests-test python3-requests-test"
          fi
          installcheck $ARCH --withobsoletes --exclude "${EXCLUDE}" tmp/repo/primary.xml.gz  --nocheck $EXTRA_NOCHECK ~/repo/${repository}-${ARCH}.solv
          exit $?
