- job:
    name: ardana-job
    concurrent: true
    workspace: "$JOB_NAME-$BUILD_ID"
    # the selected node needs the cloud credentials
    node: cloud-ardana-ci
    wrappers:
      - timestamps

    logrotate:
      numToKeep: 20
      daysToKeep: 30

    parameters:
      - string:
          name: git_automation_repo
          default: https://github.com/SUSE-Cloud/automation.git
          description: >-
            The git automation repository to use

      - string:
          name: git_automation_branch
          default: master
          description: >-
            The git automation branch

      - bool:
          name: usecobbler
          default: False
          description: >-
            use cobbler for deployement

    builders:
      - shell: |
          set -ex
          STACK_NAME=cloud-ci-$JOB_NAME-$BUILD_ID
          export ANSIBLE_HOST_KEY_CHECKING=False
          export ANSIBLE_KEEP_REMOTE_FILES=1
          # the name for the cloud defined in ~./config/openstack/clouds.yaml
          CLOUD_CONFIG_NAME=engcloud-cloud-ci

          # init the git tree
          git clone $git_automation_repo --branch $git_automation_branch automation-git
          pushd automation-git/scripts/jenkins/ardana/

          openstack --os-cloud $CLOUD_CONFIG_NAME stack create --timeout 5 --wait -t heat-template.yaml  $STACK_NAME
          DEPLOYER_IP=$(openstack --os-cloud $CLOUD_CONFIG_NAME stack output show $STACK_NAME deployer-controller-ip-floating -c output_value -f value)
          DEPLOYER_MGMT_IP=$(openstack --os-cloud $CLOUD_CONFIG_NAME stack output show $STACK_NAME deployer-controller-net-mgmt-ip -c output_value -f value)
          COMPUTE1_MGMT_IP=$(openstack --os-cloud $CLOUD_CONFIG_NAME stack output show $STACK_NAME compute1-net-mgmt-ip -c output_value -f value)
          COMPUTE2_MGMT_IP=$(openstack --os-cloud $CLOUD_CONFIG_NAME stack output show $STACK_NAME compute2-net-mgmt-ip -c output_value -f value)
          NETWORK_MGMT_ID=$(openstack --os-cloud $CLOUD_CONFIG_NAME stack output show $STACK_NAME network-mgmt-id -c output_value -f value)
          # FIXME: Use cloud-init in the used image
          sshpass -p linux ssh-copy-id -o ConnectionAttempts=120 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${DEPLOYER_IP}
          pushd ansible
          cat << EOF > hosts
          [hosts]
          $DEPLOYER_IP ansible_user=root
          EOF
          cat hosts

          cat << EOF > ardana_net_vars.yml
          ---
          deployer_mgmt_ip: $DEPLOYER_MGMT_IP
          compute1_mgmt_ip: $COMPUTE1_MGMT_IP
          compute2_mgmt_ip: $COMPUTE2_MGMT_IP
          usecobbler: $usecobbler
          EOF
          # Get the IP addresses of the dns servers from the mgmt network
          echo "mgmt_dnsservers:" >> ardana_net_vars.yml
          openstack --os-cloud $CLOUD_CONFIG_NAME port list --network $NETWORK_MGMT_ID \
                    --device-owner network:dhcp -f value -c 'Fixed IP Addresses' | \
              sed -e "s/^ip_address='\(.*\)', .*$/\1/" | \
              while read line; do echo "  - $line" >> ardana_net_vars.yml; done;

          cat ardana_net_vars.yml

          ansible-playbook -vvv -i hosts repositories.yml
          ansible-playbook -vvv -i hosts init.yml
