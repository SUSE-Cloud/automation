- job-template:
    name: '{ardana_job}'
    project-type: pipeline
    disabled: '{obj:disabled|False}'
    concurrent: '{concurrent|False}'

    logrotate:
      numToKeep: -1
      daysToKeep: 30

    triggers: '{triggers}'

    parameters:
      - string:
          name: ardana_env
          default: '{ardana_env|}'
          description: >-
            The virtual or hardware environment identifier. This field should either
            be set to one of the values associated with the known hardware environments
            (e.g. qe101), or to a value that will identify the created virtual environment.

            WARNING: if a virtual environment associated with the supplied ardana_env already
            exists, it will be replaced.

      - bool:
          name: reserve_env
          default: '{reserve_env|true}'
          description: >-
            Reserve the 'ardana_env' lockable resource throughout the execution of this job

      - choice:
          name: cloudsource
          choices:
            - '{cloudsource|stagingcloud9}'
            - stagingcloud8
            - develcloud8
            - GM8
            - GM8+up
            - hosdevelcloud8
            - hosGM8
            - hosGM8+up
            - stagingcloud9
            - develcloud9
            - cloud9M3
            - cloud9M4
            - cloud9M5
            - cloud9M6
            - cloud9M7
            - cloud9M8
            - cloud9M9
            - cloud9M10
          description: >-
            The cloud repository (from provo-clouddata) to be used for testing.
            This value can take the following form:

               stagingcloud<X> (Devel:Cloud:X:Staging)
               develcloud<X> (Devel:Cloud:X)
               GM<X> (official GM)
               GM<X>+up (official GM plus Cloud-Updates)
               cloud9MX (cloud 9 milestones)

      - bool:
          name: updates_test_enabled
          default: '{updates_test_enabled|false}'
          description: >-
            Enable SLES/Cloud test update repos (the Cloud test update repos will
            be enabled only when cloudsource is GM based)

      - bool:
          name: update_after_deploy
          default: '{update_after_deploy|false}'
          description: >-
            Run ardana update after the cloud is deployed. If true the MU's will
            be applied only after the cloud is deployed.

      - choice:
          name: update_to_cloudsource
          choices:
            - '{update_to_cloudsource|}'
            - stagingcloud8
            - develcloud8
            - GM8
            - GM8+up
            - hosdevelcloud8
            - hosGM8
            - hosGM8+up
            - stagingcloud9
            - develcloud9
            - cloud9M3
            - cloud9M4
            - cloud9M5
            - cloud9M6
            - cloud9M7
            - cloud9M8
            - cloud9M9
            - cloud9M10
          description: >-
            Only valid if update_after_deploy is true. The cloud repository
            (from provo-clouddata) to be used to update.

      - string:
          name: cloud_maint_updates
          default: ''
          description: List of cloud maintenance update IDs separated by comma (eg. 7396,7487)

      - string:
          name: sles_maint_updates
          default: ''
          description: List of SLES maintenance update IDs separated by comma (eg. 7434,7435)

      - choice:
          name: model
          choices:
            - '{model|}'
            - dac-3cp
            - dac-min
            - demo
            - deployerincloud
            - deployerincloud-lite
            - entry-scale-swift
            - mid-size
            - minimal
            - standard
            - std-3cm
            - std-3cp
            - std-min
            - std-split
          description: >-
            The name of the one of the available 'ardana-ci' input models to use from the ardana-input-model git repository.


            NOTE: use this parameter only if you want to use an existing input model. To generate an input model instead,
            leave this field empty and use the 'scenario_name' parameter instead.

      - choice:
          name: scenario_name
          choices:
            - '{scenario_name|}'
            - entry-scale-kvm
            - standard
            - std-split
            - mid-scale
          description: >-
            The name of one of the available scenarios that can be used to generate input models.
            If this parameter is set, the following parameters may also be set to different values, to control
            various aspects of the generated input model: clm_model, controllers, core_nodes, lmm_nodes, dbmq_nodes,
            neutron_nodes, swpac_nodes, swobj_nodes, sles_computes, rhel_computes and disabled_services.


            NOTE: use this parameter only if you want to use a generated input model. To use an existing input model instead,
            leave this field empty and use the 'model' parameter instead.

      - choice:
          name: clm_model
          choices:
            - '{clm_model|standalone}'
            - standalone
            - integrated
          description: |
            The type of deployer node deployment to use for the generated input model. Can take one of the following values:

              standalone - one node dedicated for CLM
              integrated - the first controller node will also be used as a CLM node

            Input model generator scenarios using this parameter : all

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: controllers
          default: '{controllers|3}'
          description: |
            The number of controller nodes in the generated input model.

            Input model generator scenarios using this parameter is available: standard, entry-scale-kvm.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: core_nodes
          default: '{core_nodes|2}'
          description: |
            The number of OpenStack core services nodes in the generated input model.

            Input model generator scenarios using this parameter is available: mid-scale, std-split.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: lmm_nodes
          default: '{lmm_nodes|1}'
          description: |
            The number of LMM services nodes in the generated input model.

            Input model generator scenarios using this parameter: mid-scale, std-split.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: dbmq_nodes
          default: '{dbmq_nodes|3}'
          description: |
            The number of database & rabbitmq service nodes in the generated input model.

            Input model generator scenarios using this parameter: std-split, mid-scale.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: neutron_nodes
          default: '1'
          description: |
            The number of neutron network nodes in the generated input model.

            Input model generator scenarios using this parameter: mid-scale.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: swpac_nodes
          default: '1'
          description: |
            The number of swift proxy/account/container service nodes in the generated input model.

            Input model generator scenarios using this parameter: mid-scale.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: swobj_nodes
          default: '1'
          description: |
            The number of swift object service nodes in the generated input model.

            Input model generator scenarios using this parameter: std-split, mid-scale.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: sles_computes
          default: '{sles_computes|2}'
          description: |
            The number of SLES compute nodes in the generated input model.

            Input model generator scenarios using this parameter: all

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: rhel_computes
          default: '0'
          description: |
            The number of RHEL (CentOS) compute nodes in the generated input model.

            Input model generator scenarios using this parameter: all

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: disabled_services
          default: '{disabled_services|}'
          description:
          description: |
            Regex matching service components and component groups to exclude from the generated input model.

            Input model generator scenarios using this parameter: all

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - bool:
          name: ses_enabled
          default: false
          description: Configure SES backend for glance, cinder, cinder-backup, nova and swift

      - choice:
          name: tempest_run_filter
          choices:
            - '{tempest_run_filter|ci}'
            - smoke
            - smoke-upstream
            - defcore
            - full
            - ci
            - barbican
            - compute
            - designate
            - identity
            - lbaas
            - monasca
            - network
            - neutron-api
            - periodic
            - periodic-virtual
            - refstack
            - swift
            - tests2skip
            - tests-ci
            - upgrade-ci
            - upgrade
          description: >-
            Name of the filter file to use for tempest. Use an empty value to
            skip running tempest.

      - extended-choice:
          name: qa_test_list
          type: multi-select
          visible-items: 10
          multi-select-delimiter: ','
          default-value: '{qa_test_list|}'
          value: >-
            iverify,ceilometer,ceilometer_capacity_management,cinder,cinder-parallel,getput,
            heat,magnum,logging,monasca,neutron,nova-attach,nova_volume,nova_migrate,
            nova_server,nova_services,nova_flavor,nova_image,barbican-cli-func,
            barbican-functional,horizon,horizon_integration-tests,freezer,
            keystone-api,keystone-ldap,keystone-k2k-config,keystone-websso-config,keystone-x509-config,
            remove_compute_node,add_compute_node,tempest_cleanup,service-ansible-playbooks,enable_tls,
            nova-guest-images
          description: >-
            Select QA tests to run. Use an empty value to skip running QA tests.

      - string:
          name: extra_repos
          default: ''
          description: >-
            A comma separated list of repository urls (ending with .repo) to be
            added on the deployer node

      - bool:
          name: rc_notify
          default: '{rc_notify|false}'
          description: >-
            Notify RocketChat when deployment starts/finishes.

      - string:
          name: github_pr
          description: >-
            String is a ':' separated list of these values:
            $ORG/$repo:$PR_ID:$SHA1:$BRANCH:$context

      - string:
          name: gerrit_change_ids
          default: ''
          description: >-
            A comma separated list of IDs for changes in
            gerrit.suse.provo.cloud to test. The patchset may be supplied as part
            of the change ID in the form:

               <change_number>[/<patchset_number>]

      - bool:
          name: want_caasp
          default: false
          description: >-
            Deploy CaaSP using the caasp-openstack-heat-templates.

      - choice:
          name: cleanup
          choices:
            - '{cleanup|on success}'
            - 'never'
            - 'always'
            - 'on success'
            - 'on failure'
          description: >-
            Configure the conditions that trigger the virtual environment cleanup. Possible values are:
              - never
              - always
              - on success
              - on failure

      - string:
          name: git_automation_repo
          default: '{git_automation_repo|https://github.com/SUSE-Cloud/automation.git}'
          description: >-
            The git automation repository to use

      - string:
          name: git_automation_branch
          default: '{git_automation_branch|master}'
          description: >-
            The git automation branch

      - string:
          name: external_name
          default: ''
          description: >-
            Configurable external name for your public endpoints

      - string:
          name: os_cloud
          default: '{os_cloud|engcloud-cloud-ci-private}'
          description: >-
            The OpenStack API credentials used to manage virtual clouds (leave
            empty to use the default shared 'cloud' ECP account).

    pipeline-scm:
      scm:
        - git:
            url: ${{git_automation_repo}}
            branches:
              - ${{git_automation_branch}}
            browser: auto
            wipe-workspace: false
      script-path: jenkins/ci.suse.de/pipelines/openstack-ardana.Jenkinsfile
      lightweight-checkout: false
