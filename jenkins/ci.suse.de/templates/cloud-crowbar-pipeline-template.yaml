- job-template:
    name: '{crowbar_job}'
    project-type: pipeline
    disabled: '{obj:disabled|False}'
    concurrent: '{concurrent|False}'

    logrotate:
      numToKeep: -1
      daysToKeep: 30

    triggers: '{triggers}'

    parameters:
      - validating-string:
          name: cloud_env
          default: '{cloud_env|}'
          regex: '[A-Za-z0-9-]+'
          msg: >-
            Empty or malformed value (only alphanumeric and '-' characters are allowed).
          description: >-
            The virtual or hardware environment identifier. This field should either
            be set to one of the values associated with the known hardware environments
            (e.g. qe101), or to a value that will identify the created virtual environment.

            WARNING: if a virtual environment associated with the supplied cloud_env already
            exists, it will be replaced.

      - bool:
          name: reserve_env
          default: '{reserve_env|true}'
          description: >-
            Reserve the 'cloud_env' lockable resource throughout the execution of this job.

      - bool:
          name: debug
          default: '{debug|false}'
          description: >-
            Debug 'qa_crowbarsetup.sh' and OpenStack services, i.e. add a lot of verbose output.

      - choice:
          name: os_cloud
          choices:
            - 'engcloud'
            - 'susecloud'
          description: >-
            The target OpenStack cloud platform used as infrastructure for a
            virtual cloud deployment. Possible values are:

              engcloud  - the Provo engineering cloud (engcloud.prv.suse.net)
              susecloud - the Nuremberg SUSE cloud (cloud.suse.de)

            If the 'cloud_env' value (or the reserved resource, when 'reserve_env' is selected),
            matches one of the virtual cloud slots (https://ci.nue.suse.com/lockable-resources/),
            the 'os_cloud' parameter is overridden to reflect the OpenStack platform associated with it.

      - choice:
          name: cloudsource
          choices:
            - '{cloudsource|stagingcloud9}'
            - stagingcloud7
            - develcloud7
            - GM7
            - GM7+up
            - stagingcloud8
            - develcloud8
            - GM8
            - GM8+up
            - stagingcloud9
            - develcloud9
            - GM9
            - GM9+up
            - cloud9M3
            - cloud9M4
            - cloud9M5
            - cloud9M6
            - cloud9M7
            - cloud9M8
            - cloud9M9
            - cloud9M10
          description: >-
            The cloud repository (from provo-clouddata) to be used for testing.
            This value can take the following form:

               stagingcloud<X> (Devel:Cloud:X:Staging)
               develcloud<X> (Devel:Cloud:X)
               GM<X> (official GM)
               GM<X>+up (official GM plus Cloud-Updates)
               cloud9MX (cloud 9 milestones)

      - bool:
          name: deploy_cloud
          default: '{deploy|true}'
          description: >-
            If left unchecked, the cloud deployment steps will be skipped. This option can be
            used if you only need to set up the infrastructure and configure the cloud media and
            repositories, but skip the actual cloud deployment, e.g. for testing purposes.

      - bool:
          name: pxe_boot_enabled
          default: '{pxe_boot_enabled|false}'
          description:
            Infra nodes (besides the admin) will be provisioned by crowbar.

      - bool:
          name: test_cloud
          default: '{test|true}'
          description: >-
            If left unchecked, the cloud test steps will be skipped.

      - bool:
          name: updates_test_enabled
          default: '{updates_test_enabled|false}'
          description: >-
            Enable SLES/Cloud test update repos (the Cloud test update repos will
            be enabled only when cloudsource is GM based)

      - bool:
          name: update_after_deploy
          default: '{update_after_deploy|false}'
          description: >-
            If true the Maintenance update repos will be added and updates applied after
            cloud is deployed.

            NOTE: Maintenance updates = 'maint_updates' option

      - bool:
          name: reboot_after_deploy
          default: '{reboot_after_deploy|false}'
          description: >-
            If true then cloud will be rebooted after deployment. For example after
            maintenance updates were installed.

            NOTE: Currently works when 'update_after_deploy' is ticked.

      - validating-string:
          name: maint_updates
          default: ''
          regex: '([0-9]+(,[0-9]+)*)*'
          msg: The entered value failed validation
          description: List of maintenance update IDs separated by comma (eg. 7396,7487)

      - choice:
          name: scenario_name
          choices:
            - '{scenario_name|standard}'
            - standard
            - entry-scale-kvm
            - mid-scale-kvm
            - std-lmm
            - std-split
          description: >-
            The name of one of the available scenarios that can be used to generate input models.
            If this parameter is set, the following parameters may also be set to different values, to control
            various aspects of the generated input model: controllers, computes, core_nodes, dbmq_nodes,
            neutron_nodes and disabled_services.

            NOTE: use this parameter only if you want to use a generated input model. To use an existing input model instead,
            leave this field empty and use the 'model' parameter instead.

      - choice:
          name: upgrade_cloudsource
          choices:
            - '{upgrade_cloudsource|}'
            - stagingcloud8
            - develcloud8
            - GM8+up
            - stagingcloud9
            - develcloud9
            - GM9+up
          description: >-
            The cloud repository to be used for a cloud upgrade.
            This value can take the following form:

               stagingcloud<X> (Devel:Cloud:X:Staging)
               develcloud<X> (Devel:Cloud:X)
               GM<X>+up (official GM plus Cloud-Updates)

      - extended-choice:
          name: enabled_services
          type: multi-select
          visible-items: 10
          multi-select-delimiter: ','
          default-value: '{enabled_services|database,rabbitmq,keystone,swift,monasca,glance,cinder,neutron,nova,horizon,ceilometer,heat,manila,trove,designate,barbican,octavia,magnum,sahara,aodh,tempest}'
          value: >-
            database,rabbitmq,keystone,swift,monasca,glance,cinder,neutron,nova,
            horizon,ceilometer,heat,manila,trove,designate,barbican,octavia,
            magnum,sahara,aodh,tempest
          description: >-
            The list of services (barclamps) that are enabled in the generated cloud
            configuration. Leave empty to include everything.

            NOTE: this list may not reflect what is actually added to the generated
            cloud configuration. Some services may be filtered out because they are
            only available in certain cloud versions or because they depend on other
            disabled services. Other services may not be deployed because they are not
            included in the scenario or because the number of nodes where they are
            deployed is set to 0 using the other scenario parameters.

      - validating-string:
          name: controllers
          default: '{controllers|1}'
          regex: '[0-3]'
          msg: The entered value failed validation
          description: |
            The number of controller nodes in the generated input model (0-3).

            Input model generator scenarios using this parameter: standard, entry-scale-kvm.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - validating-string:
          name: computes
          default: '{computes|1}'
          regex: '[0-9]+'
          msg: The entered value failed validation
          description: |
            The number of SLES compute nodes in the generated input model.

            Input model generator scenarios using this parameter: all

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - validating-string:
          name: core_nodes
          default: '{core_nodes|2}'
          regex: '[0-3]'
          msg: The entered value failed validation
          description: |
            The number of OpenStack core services nodes in the generated input model (0-3).

            Input model generator scenarios using this parameter: mid-scale-kvm, std-split.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - validating-string:
          name: dbmq_nodes
          default: '{dbmq_nodes|3}'
          regex: '[0-3]'
          msg: The entered value failed validation
          description: |
            The number of database & rabbitmq service nodes in the generated input model (0-3).

            Input model generator scenarios using this parameter: mid-scale-kvm, std-split.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - validating-string:
          name: neutron_nodes
          default: '{neutron_nodes|3}'
          regex: '[0-3]'
          msg: The entered value failed validation
          description: |
            The number of neutron network nodes in the generated input model (0-3).

            Input model generator scenarios using this parameter: mid-scale-kvm.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - string:
          name: disabled_services
          default: '{disabled_services|}'
          description: |
            Regex matching service components and component groups to exclude from the generated input model.

            NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter about
            using one of the available input model generator scenarios.

      - bool:
          name: ses_enabled
          default: '{ses_enabled|true}'
          description: Configure SES backend for glance, cinder and nova

      - choice:
          name: crowbar_networkingmode
          choices:
            - '{crowbar_networkingmode|single}'
            - team
          description: >-
            Set the networking mode for Crowbar:

            single: One single network interface
            team: Two interfaces will be used through one bonding interface

      - choice:
          name: neutron_networkingplugin
          choices:
            - '{neutron_networkingplugin|openvswitch}'
            - linuxbridge
          description: Neutron ML2 plugin

      - bool:
          name: ipv6
          default: '{ipv6|false}'
          description: >-
            Enable ipv6 support in the cloud configuration

      - extended-choice:
          name: tempest_filter_list
          type: multi-select
          visible-items: 10
          multi-select-delimiter: ','
          default-value: '{tempest_filter_list|smoke}'
          value: >-
            smoke,keystone,swift,glance,cinder,neutron,nova,ceilometer,barbican,fwaas,
            trove,aodh,heat,magnum,manila,lbaas,octavia,designate
          description: >-
            Name of the filter file to use for tempest. Selecting multiple values
            will run tempest for each selected value.

      - validating-string:
          name: extra_repos
          default: ''
          regex: '((http(s)?:\/\/[^ ,]+)(\,http(s)?:\/\/[^ ,]+)*)*'
          msg: The entered value failed validation
          description: >-
            A comma separated list of repository urls to be downloaded to the admin node and then used from other nodes

      - bool:
          name: rc_notify
          default: '{rc_notify|false}'
          description: >-
            Notify RocketChat when deployment starts/finishes.

      - choice:
          name: cleanup
          choices:
            - '{cleanup|on success}'
            - 'never'
            - 'always'
            - 'on success'
            - 'on failure'
          description: >-
            Configure the conditions that trigger the virtual environment cleanup. Possible values are:
              - never
              - always
              - on success
              - on failure

      - string:
          name: git_automation_repo
          default: '{git_automation_repo|https://github.com/SUSE-Cloud/automation.git}'
          description: >-
            The git automation repository to use

      - string:
          name: git_automation_branch
          default: '{git_automation_branch|master}'
          description: >-
            The git automation branch

      - string:
          name: os_project_name
          default: '{os_project_name|}'
          description: >-
            The name of the OpenStack project that hosts the virtual cloud deployment
            in the 'os_cloud' OpenStack cloud platform (leave empty to use the
            default shared 'cloud' account).

            If the 'cloud_env' value (or the reserved resource, when 'reserve_env' selected),
            matches one of the virtual cloud slots (https://ci.nue.suse.com/lockable-resources/),
            the 'cloud-ci' OpenStack project used exclusively for the Cloud CI will be used
            regardless of this parameter.

      - text:
          name: extra_params
          default: '{extra_params|}'
          description: >-
            This field may be used to define additional parameters,
            one per line, in the form PARAMETER_NAME=PARAMETER-VALUE.
            These parameters will be injected into the Jenkins job as
            environment variables that supplement or override the
            other parameters configured for the Jenkins job. This
            should not be used by default or regularly. It is meant to
            run job build customized in ways not already supported by
            the job's parameters, such as testing automation git pull
            requests with special configurations.

      - hidden:
          name: tempest_retry_failed
          default: '{tempest_retry_failed|false}'
          description: >-
            Re-run failed tempest test cases.

      - validating-string:
          name: sync_mark_timeout_multiplier
          default: '{sync_mark_timeout_multiplier|2.0}'
          regex: '[+-]?([0-9]*[.])[0-9]+'
          msg: The entered value failed validation - requires a floating point value
          description: >-
            Set the crowbar sync_mark_timeout multiplier. Can be used to increase/decrease
            the crowbar sync mark timeout.

      - hidden:
          name: cloud_product
          default: 'crowbar'
          description: >-
            Cloud product (ardana or crowbar)

      - hidden:
          name: collect_supportconfig
          default: '{collect_supportconfig|true}'
          description: >-
            Collect supportconfig files when the job fails

      - hidden:
          name: run_testsetup_tempest
          default: '{run_testsetup_tempest|false}'
          description: >-
            Run tempest as part of the onadmin_testsetup step

      - bool:
          name: want_caaspv4
          default: false
          description: >-
            Deploy CaaSPv4 using terraform on openstack.

    pipeline-scm:
      scm:
        - git:
            url: ${{git_automation_repo}}
            branches:
              - ${{git_automation_branch}}
            browser: auto
            wipe-workspace: false
      script-path: jenkins/ci.suse.de/pipelines/openstack-crowbar.Jenkinsfile
      lightweight-checkout: false
