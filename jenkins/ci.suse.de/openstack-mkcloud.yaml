- job:
    name: openstack-mkcloud
    node: openstack-mkcloud
    concurrent: true
    description: >
      This job runs https://github.com/SUSE-Cloud/automation/blob/master/scripts/mkcloud

      Results are analyzed by
      https://github.com/SUSE-Cloud/automation/blob/master/scripts/jenkins/mkcloudresultcheck.pl
      on mkcloudresultcheck@mkcloudresultcheck.cloud.suse.de every 15 minutes

    logrotate:
      numToKeep: 2000
      daysToKeep: 300

    properties:
      - authorization:
          cloud:
            - job-build
            - job-cancel
            - job-configure
            - job-delete
            - job-discover
            - job-read
            - job-workspace
            - run-delete
            - run-update
            - scm-tag
          anonymous:
            - job-read

    parameters:

      ################################################
      # CI job run

      - string:
          name: mkcloudtarget
          default: all
          description: >-
            Set mkcloudtarget to define the mkcloud command line parameters.

      - string:
          name: github_pr
          description: >-
            String is a ':' separated list of these values:
            $ORG/$repo:$PR_ID:$SHA1:$BRANCH:$context

            Note: SHA1 must be latest commit in PR, $context is optional
            (only use if multiple gating runs needed per PR)

      - string:
          name: job_name
          default: "-no-name-"
          description: >-
            This name will become the build name of the job.
            It will appear in the list of builds (webUI, RSS feed).

      - string:
          name: scenario
          default:
          description: >-
            Defines which scenario file should be used.
            Currently only the 'batch' step uses such a file.

      - label:
          name: label
          all-nodes: false
          default: openstack-mkcloud
          description: >-
            Default: openstack-mkcloud |
            Possible values:
            openstack-mkcloud-SLE11 (SLE11 host),
            openstack-mkcloud-SLE12 (SLE12 host),
            openstack-mkcloud-SLE12-aarch64 (SLE12 aarch64 host)

      - string:
          name: debug_mkcloud
          default: '1'
          description: |
            Use set -x and PS4 tracing for mkcloud

      - string:
          name: debug_qa_crowbarsetup
          default: '1'
          description: |
            Use set -x and PS4 tracing for qa_crowbarsetup.sh

      ################################################
      # repositories

      - string:
          name: cloudsource
          default: develcloud8
          description: >-
            Can be something like develcloud7 (uses Devel:Cloud:*, see
            TESTHEAD parameter for Staging), susecloud6 (uses SUSE:*),
            GM3 (uses the GM ISO)

      - text:
          name: UPDATEREPOS
          default:
          description: >-
            Update repositories (one URL per line)

      - bool:
          name: UPDATEBEFOREINSTALL
          default: false
          description: >-
            Add update repos before crowbar install

      - string:
          name: TESTHEAD
          default: '1'
          description: >-
            If non-empty, test latest version from Devel:Cloud (:1.0)

      - string:
          name: want_test_updates
          default:
          description: >-
            Allow disabling of test updates

      - string:
          name: want_sles12
          default:
          description: >-
            Set to 1 if sle12 nodes should be installed

      - string:
          name: want_sles12sp2
          default:
          description: >-
            Deploy cloud7 with SP2 instead of SP1

      - string:
          name: want_cd
          default:
          description: >-
            Add CD repos before crowbar install

      - string:
          name: upgrade_cloudsource
          default:
          description: >-
            In case of using upgrade, upgrade to that cloudsource version

      ################################################
      # cloud shape and size

      - choice:
          name: libvirt_type
          choices:
            - kvm
            - xen
            - hyperv

      - string:
          name: nodenumber
          default: '2'
          description: >-
            Number of nodes excluding admin-node.  Minimum is 2 (controller+compute)

      - string:
          name: nics
          default:
          description: >-
            Number of network interfaces for the nodes (admin node has always 1 currently).
            If Ironic is enabled (want_ironic=1) min value of this parameter is set to 2.

      - bool:
          name: WITHCROWBARREGISTER
          default: false
          description: >-
            Boot up one node in the admin network from a preinstalled
            OS image, and register it with crowbar_register (image type
            depends on want_sles12 parameter)

      - string:
          name: want_node_aliases
          default:
          description: >-
            List of aliases to assign to nodes.  Takes all provided
            aliases and assign them to available nodes
            successively. Examples:

            want_node_aliases='controller=1,ceph=2,compute=1'
            assigns the aliases to 4 nodes as controller, ceph1, ceph2, compute

            want_node_aliases='data=1,services=2,storage=2'
            assigns the aliases to 5 nodes as data, service1, service2,
            storage1, storage2

      - string:
          name: hacloud
          default:
          description: If hacloud=1 then deploy a 4-node cluster

      - string:
          name: clusterconfig
          default:
          description: Cluster configuration to pass to the mkcloud script

      - string:
          name: vcpus
          default: '2'
          description: Number of vcpus for the compute nodes

      ################################################
      # OS deployment

      - string:
          name: want_efi
          default:
          description: Set to UEFI boot admin node

      - string:
          name: want_rootfs
          default:
          description: Set to btrfs to deploy with btrfs

      ################################################
      # Crowbar

      - string:
          name: crowbar_networkingmode
          default: 'single'
          description: The Crowbar networking mode.

      ################################################
      # general OpenStack deployment

      - string:
          name: want_all_ssl
          default:
          description: Set to 1 to deploy all cloud services with SSL aka HTTPS

      - string:
          name: want_ldap
          default:
          description: Set to 1 to deploy keystone with LDAP

      - string:
          name: want_database_sql_engine
          default: ''
          description: The database backend sql_engine to be used

      - string:
          name: want_osprofiler
          default:
          description: Set to 1 will setup osprofiler

      ################################################
      # neutron

      - choice:
          name: networkingplugin
          choices:
            - openvswitch
            - linuxbridge

      - choice:
          name: networkingmode
          choices:
            - vxlan
            - vlan
            - gre

      - string:
          name: want_dvr
          default:
          description: Set to 1 to deploy neutron with Distributed Virtual Router

      - string:
          name: want_l3_ha
          default:
          description: Set to 1 to deploy neutron with l3 HA

      ################################################
      # storage

      - string:
          name: cephvolumenumber
          default: '1'
          description: number of extra disks (for cinder, swift, ceph)

      - choice:
          name: storage_method
          description: |
            Select storage method: default (let mkcloud decide), none (enforce none)
          choices:
            - default
            - none
            - swift
            - ceph

      - choice:
          name: cinder_backend
          choices:
            - " "
            - local
            - raw
            - rbd
            - netapp
            - nfs

      - bool:
          name: want_cindermultibackend
          default: false
          description: enables deployment of more than one cinder backend

      - string:
          name: cinder_netapp_login
          default:
          description: >-
            Password for the user "openstack" as configured on the netapp server

      - string:
          name: cinder_netapp_password
          default:
          description: >-
            Password for the user "openstack" as configured on the netapp server

      ################################################
      # tempest

      - string:
          name: want_tempest
          default:
          description: can be used for force off(0) or on(1)

      - string:
          name: tempestoptions
          default:
          description: >-
            Additional options to pass to the "tempest run " step. The
            default is cloudversion specific but will default to a smoke run.

      ################################################
      # horizon

      - string:
          name: want_horizon_integration_test
          default:
          description: >-
            Execute selenium integration tests for Horizon after
            Tempest. This test is in beta, and a fail will not be
            considered for now.

      ################################################
      # extras

      - string:
          name: want_ironic
          default:
          description: set to 1 to deploy with ironic

      - string:
          name: want_ceilometer_proposal
          default:
          description: Deploy with Ceilomenter

      - string:
          name: want_designate_proposal
          default:
          description: Deploy with Designate

      - string:
          name: want_magnum_proposal
          default:
          description: Deploy with Magnum

      - string:
          name: want_manila_proposal
          default:
          description: Deploy with Manila

      - string:
          name: want_monasca_proposal
          default:
          description: Deploy with Monasca

      - string:
          name: want_barbican_proposal
          default:
          description: Deploy with Barbican

      - string:
          name: want_sahara_proposal
          default:
          description: set to 1 to deploy sahara

      - string:
          name: want_aodh_proposal
          default: '1'
          description: set to 0 to not deploy aodh

      ################################################
      # misc

      - string:
          name: want_nodesupgrade
          default: '1'
          description: set to 0 to not upgrade nodes, only admin server

      - string:
          name: want_ping_running_instances
          default:
          description: set to 1 to ping running instances during the upgrade

      - text:
          name: custom_settings
          default:
          description: >-
            This holds shell code and will be executed before calling
            mkcloud. This should not be used by default or regularly. It
            is meant to test PRs with special configurations.

    wrappers:
      - timestamps:
      - build-name:
          name: '#${BUILD_NUMBER}: ${ENV,var="job_name"}'
      - timeout:
          timeout: 60
          type: no-activity
          abort: true
          write-description: "Job aborted due to 60 minutes of inactivity."

    builders:
      - update-automation
      - shell: |
          export automationrepo=~/github.com/SUSE-Cloud/automation
          exec ${automationrepo}/scripts/jenkins/mkcloud/openstack-mkcloud.prep.sh
      - shell: |
          export automationrepo=~/github.com/SUSE-Cloud/automation
          if [ -d $WORKSPACE/automation-git ] ; then
            # If we're testing a pull request, use our custom checkout
            export automationrepo=$WORKSPACE/automation-git
          fi
          exec ${automationrepo}/scripts/jenkins/mkcloud/openstack-mkcloud.builder.sh

    publishers:
      - logparser:
          use-project-rules: true
          parse-rules: log-parser-plugin-rules.txt
          unstable-on-warning: false
          fail-on-error: false
          show-graphs: true
      - archive:
          artifacts: .artifacts/**
          allow-empty: false
          only-if-success: false
          fingerprint: false
          default-excludes: true
    triggers: []
