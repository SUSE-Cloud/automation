- job:
    name: cloud-mkphyscloud-qa-scenario-1a
    node: cloud-mkphyscloud-gate-qa
    description: |
      <b>This job is managed by JJB! Changes must be done in
      <a href='https://github.com/SUSE-Cloud/automation/tree/master/jenkins/ci.suse.de/'>git</a>
      </b>
      Scenario details:
        - 7 nodes
        - HA with IPMI (3 controllers
        - shared device for DB and rabbit
        - swift

      It will wipe all machines in the selected cloud!

    wrappers:
      - mkphyscloud-qa-common-wrappers
    publishers:
      - mkphyscloud-qa-common-publishers

    logrotate:
      numToKeep: 7
      daysToKeep: -1

    parameters:
      - string:
          name: hw_number
          default: "2"
          description: Mandatory, name of the QA cloud server as integer

      - string:
          name: tempest
          default: smoke
          description: Optional, specify what tempest test(s) to run, e.g. smoke, smoke|full or smoke|defcore

      - string:
          name: cct
          default: features:base
          description: Optional, specify cct tests to run

      - bool:
          name: horizon-tests
          default: false
          description: Optional, Run horizon integration tests.

      - string:
          name: ssl_type
          default: no-ssl
          description: "Mandatory, set the SSL configuration for the cloud, available options: no-ssl, ssl-insecure, ssl"

      - string:
          name: cloud_version
          default: "7"
          description: Mandatory, version of the cloud to be installed as integer

      - string:
          name: scenario_url
          default: https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/scenarios/cloud$cloud_version/qa/$ssl_type/qa-scenario-1a.yaml
          description: Location of scenario yaml file

      # Parameters for qa_crowbarsetup.sh
      - string:
          name: cloudsource
          default: develcloud$cloud_version
      - string:
          name: TESTHEAD
          default: "1"
          description: if non-empty, test latest version from Devel:Cloud Stagin
      - string:
          name: hacloud
          default: "1"
          description: By default we do not want HA configured and installed
      - string:
          name: clusterconfig
          default: services=3
          description: HA configuration for clusters. Make sense only if hacloud=1
      - string:
          name: nodenumber
          default: "7"
          description: Number of nodes to use; is scenario specific
      - string:
          name: want_ipmi
          default: "true"
      - string:
          name: automation_branch
          default: master
          description: branch to use from the main automation repo
      - string:
          name: commands
          default: prepareinstallcrowbar bootstrapcrowbar installcrowbar allocate waitcloud setup_aliases batch
          description: All the steps that needs to be completed to have cloud installed
      - text:
          name: UPDATEREPOS
          default:
          description: Update repositories (one URL per line)
      - bool:
          name: UPDATEBEFOREINSTALL
          default: false
          description: add update repos before crowbar install

    builders:
      - shell: |
          #!/bin/bash
          admin=crowbar$hw_number
          cloud=qa$hw_number

          if [ ! -z "$UPDATEREPOS" ] ; then
            # testing update only makes sense with GMx and without TESTHEAD
            unset TESTHEAD
            export UPDATEREPOS=${UPDATEREPOS//$'\n'/+}
          fi

          export artifacts_dir=$WORKSPACE/.artifacts
          rm -rf $artifacts_dir
          mkdir -p $artifacts_dir
          touch $artifacts_dir/.ignore

          freshadminvm $admin
          sleep 100 # time for the admin VM to boot

          # wipe out shared NFS that should be used by this deployment
          ssh root@localhost "wipe_nfs_shares qa$hw_number"

          curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash -x

          # rest of code runs on admin node:
          env | grep -e networking -e libvirt -e cloud > mkcloud.config
          scp -r github.com/SUSE-Cloud/automation/scripts mkcloud.config root@$admin:
          ret=0

          ssh root@$admin "
          export cloud=$cloud ;
          export hw_number=$hw_number ;
          export UPDATEREPOS=$UPDATEREPOS ;
          export UPDATEBEFOREINSTALL=$UPDATEBEFOREINSTALL ;
          export TESTHEAD=$TESTHEAD ;
          export cloudsource=$cloudsource ;
          export nodenumber=$nodenumber ;
          export hacloud=$hacloud ;
          export clusterconfig=$clusterconfig ;
          export scenario_url=$scenario_url ;
          export want_node_aliases=controller=3,compute-kvm=2,storage-swift=2 ;
          export scenario=\"/root/scenario.yml\" ;
          export commands=\"$commands\" "'

          wget --no-check-certificate -Oscenario.yml "$scenario_url"

          sed -i -e "s,##shared_nfs_for_database##,10.162.24.1:/var/$cloud/ha-database," scenario.yml
          sed -i -e "s,##shared_nfs_for_rabbitmq##,10.162.24.1:/var/$cloud/ha-rabbitmq," scenario.yml

          [ $UPDATEBEFOREINSTALL == "true" ] && export updatesteps="addupdaterepo runupdate"

          timeout --signal=ALRM 240m bash -x -c ". scripts/qa_crowbarsetup.sh ; onadmin_runlist $commands"
          ' || ret=$?


          if [ $ret != 0 ] ; then
            ssh $sshopts root@$admin '
            set -x
            for node in $(crowbar machines list | grep ^d) ; do
              (
              echo "Collecting supportconfig from $node"
              timeout 400 ssh $node supportconfig | wc
              timeout 300 scp $node:/var/log/\*tbz /var/log/
              )&
            done
            timeout 500 supportconfig | wc &
            wait
            '

            scp root@$admin:/var/log/*tbz $artifacts_dir/
          fi >&2

          exit $ret

      - trigger-builds:
          - project: cloud-mkphyscloud-qa-tests-trigger
            condition: SUCCESS
            block: true
            predefined-parameters: |
              hw_number=$hw_number
              tempest=$tempest
              cct_tests=$cct
              horizon-tests=$horizon-tests
              scenario_name=1a
              scenario_job_name=$JOB_NAME
              scenario_build_number=$BUILD_NUMBER
