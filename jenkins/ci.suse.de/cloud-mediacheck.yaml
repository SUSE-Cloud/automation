- job:
    name: 'cloud-mediacheck'
    project-type: matrix
    label: cloud-mediacheck

    triggers:
      - timed: '@hourly'

    logrotate:
      numToKeep: 24
      daysToKeep: -1

    axes:
      - axis:
          type: user-defined
          name: project
          values:
            - Devel:Cloud:7/SLE_12_SP2
            - Devel:Cloud:8/SLE_12_SP3/SOC
            - Devel:Cloud:8/SLE_12_SP3/HOS
            - Devel:Cloud:8/SLE_12_SP3/CROWBAR
            - Devel:Cloud:9/SLE_12_SP4/SOC
            - Devel:Cloud:9/SLE_12_SP4/CROWBAR
            - SUSE:SLE-12-SP3:Update:Products:Cloud8/SLE_12_SP3/SOC
            - SUSE:SLE-12-SP3:Update:Products:Cloud8/SLE_12_SP3/HOS
            - SUSE:SLE-12-SP3:Update:Products:Cloud8/SLE_12_SP3/CROWBAR
            - SUSE:SLE-12-SP4:Update:Products:Cloud9/SLE_12_SP4/SOC
            - SUSE:SLE-12-SP4:Update:Products:Cloud9/SLE_12_SP4/CROWBAR
      - axis:
          type: user-defined
          name: subproject
          values:
            - ':'
            - ':Staging'
      - axis:
          type: slave
          name: labels
          values:
            - cloud-mediacheck
    execution-strategy:
      combination-filter: |
        (
          [
            "Devel:Cloud:7/SLE_12_SP2",
            "Devel:Cloud:8/SLE_12_SP3/SOC",
            "Devel:Cloud:8/SLE_12_SP3/HOS",
            "Devel:Cloud:8/SLE_12_SP3/CROWBAR",
            "Devel:Cloud:9/SLE_12_SP4/SOC",
            "Devel:Cloud:9/SLE_12_SP4/CROWBAR"
          ].contains(project)
          || subproject == ":"
        )
    builders:
      - shell: |
          export automationrepo=~/github.com/SUSE-Cloud/automation

          # Workaround to get only the name of the job:
          # https://issues.jenkins-ci.org/browse/JENKINS-39189
          # When the JOB_BASE_NAME contains only in ex. "cloud-mediacheck", this
          # workaround can be removed.
          echo "$JOB_BASE_NAME"
          main_job_name=${JOB_NAME%%/*}

          # automation bootstrapping
          if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
            rm -rf ${automationrepo}
            curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
          fi
          # fetch the latest automation updates
          ${automationrepo}/scripts/jenkins/update_automation

          if [[ ! -d /mounts/dist ]] ; then
              zypper -n install git-core rsync make autofs nfs-client ypbind kernel-default -kernel-default-base curl wget libsolv-tools bsdtar
              echo -e 'ypserver 10.160.0.10\nypserver 10.160.0.1\nypserver 10.160.0.150' > /etc/yp.conf
              echo suse.de > /etc/defaultdomain
              for s in ypbind autofs ; do
                  chkconfig $s on
                  service $s restart
              done
          fi
          # temporary, similar to update_automation (not that advanced)
          d=~/github.com/SUSE/cloud/
          if [ ! -e  $d ] ; then
            mkdir -p ~/github.com/SUSE
            git clone git@github.com:SUSE/cloud.git $d
          fi
          pushd $d
          git pull
          popd
          rm -rf cloud/
          mkdir -p cloud
          rsync -av $d/scripts ./cloud/

          # options
          export RPM_DEPCHECK=1
          export SRCRPM_DEPCHECK=0

          if [[ "$project" == "Devel:Cloud:Shared:11-SP3:Update" || "$project" =~ Devel:Cloud:.*:Appliances ]]; then
              export RPM_DEPCHECK_MEDIADEPS=" "
              export SRCRPM_DEPCHECK_MEDIADEPS=" "
              export INSTALLCHECK_EXTRA_OPTS="--exclude pattern:"
          fi

          # temporary, remove once there is a current resource-agents package
          # in SLE-12-SP3 and we no longer need to keep our own in
          # Devel:Cloud:8 (otherwise we'd have to pull all the HA dependencies
          # used by resource-agents into the product just for the sake of
          # the cloud-mediacheck job since everything except mediacheck has SLE
          # 12 SP3 HA media available and can thus fulfill the resource-agents
          # package's dependencies).
          if [[ "$project" =~ Devel:Cloud:8.* ]]; then
              export INSTALLCHECK_EXTRA_OPTS="--exclude resource-agents"
          fi

          OBS_PROJECT=$project
          stage=$subproject
          [[ $stage == ":" ]] && stage=


          if [ -n "$stage" ]; then
              if [ "${OBS_PROJECT##*\/}" != "${OBS_PROJECT}" ]; then
                  OBS_PROJECT=${OBS_PROJECT%%\/*}$stage/${OBS_PROJECT#*\/}
              else
                  OBS_PROJECT=${OBS_PROJECT%%\/*}$stage
              fi
          fi

          OBS_TYPE=IBS OBS_PROJECT=$OBS_PROJECT make -C cloud/scripts/release-mgmt/ mediacheck
    publishers:
      - workspace-cleanup:
          fail-build: false
          clean-parent: false
