- job:
    name: 'cloud-mediacheck'
    project-type: matrix
    label: cloud-mediacheck

    triggers:
      - timed: '@hourly'

    logrotate:
      numToKeep: 24
      daysToKeep: -1

    axes:
      - axis:
          type: user-defined
          name: project
          values:
            - Devel:Cloud:6/SLE_12_SP1
            - Devel:Cloud:6:Appliances/SLE_12_SP1
            - Devel:Cloud:7/SLE_12_SP2
            - Devel:Cloud:7:Mitaka/SLE_12_SP2
            - Devel:Cloud:8/SLE_12_SP3
            - Devel:Cloud:8:Ocata/SLE_12_SP3
            - Devel:Cloud:8:Pike/SLE_12_SP3
            - SUSE:SLE-12-SP3:Update:Products:Cloud8/SLE_12_SP3
      - axis:
          type: user-defined
          name: subproject
          values:
            - ':'
            - ':Staging'
      - axis:
          type: slave
          name: labels
          values:
            - cloud-mediacheck
    execution-strategy:
      combination-filter: |
        (["Devel:Cloud:6", "Devel:Cloud:6/SLE_12_SP1", "Devel:Cloud:7/SLE_12_SP2", "Devel:Cloud:8/SLE_12_SP3" ].contains(project) || subproject == ":")
    builders:
      - shell: |
          export automationrepo=~/github.com/SUSE-Cloud/automation
          export jtsync=${automationrepo}/scripts/jtsync/jtsync.rb

          # automation bootstrapping
          if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
            rm -rf ${automationrepo}
            curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
          fi
          # fetch the latest automation updates
          ${automationrepo}/scripts/jenkins/update_automation

          function cleanup() {
              # Cleanup isos from old builds
              rm -f scripts/release-mgmt/*Media1.iso
          }

          function jtsync_trap() {
            $jtsync --ci suse --matrix ${JOB_BASE_NAME},${project},${BUILD_NUMBER} 1 || :
            cleanup
          }

          # only enable jtsync when build is not manually triggered
          if [[ "${ROOT_BUILD_CAUSE}" != "MANUALTRIGGER" ]]; then
            trap jtsync_trap EXIT ERR
          fi
          if [[ ! -d /mounts/dist ]] ; then
              zypper -n install git-core rsync make autofs nfs-client ypbind kernel-default -kernel-default-base curl wget libsolv-tools bsdtar
              echo -e 'ypserver 10.160.0.10\nypserver 10.160.0.1\nypserver 10.160.0.150' > /etc/yp.conf
              echo suse.de > /etc/defaultdomain
              for s in ypbind autofs ; do
                  chkconfig $s on
                  service $s restart
              done
          fi
          # temporary, similar to update_automation (not that advanced)
          d=~/github.com/SUSE/cloud/
          if [ ! -e  $d ] ; then
            mkdir -p ~/github.com/SUSE
            git clone git@github.com:SUSE/cloud.git $d
          fi
          pushd $d
          git pull
          popd
          rm -rf cloud/
          mkdir -p cloud
          rsync -av $d/scripts ./cloud/

          cleanup

          # options
          export RPM_DEPCHECK=1
          export SRCRPM_DEPCHECK=0

          if [[ "$project" == "Devel:Cloud:Shared:11-SP3:Update" || "$project" =~ Devel:Cloud:.*:Appliances ]]; then
              export RPM_DEPCHECK_MEDIADEPS=" "
              export SRCRPM_DEPCHECK_MEDIADEPS=" "
              export INSTALLCHECK_EXTRA_OPTS="--exclude pattern:"
          fi

          OBS_PROJECT=$project
          stage=$subproject
          [[ $stage == ":" ]] && stage=


          if [ -n "$stage" ]; then
              if [ "${OBS_PROJECT##*\/}" != "${OBS_PROJECT}" ]; then
                  OBS_PROJECT=${OBS_PROJECT%%\/*}$stage/${OBS_PROJECT##*\/}
              else
                  OBS_PROJECT=${OBS_PROJECT%%\/*}$stage
              fi
          fi

          OBS_TYPE=IBS OBS_PROJECT=$OBS_PROJECT make -C cloud/scripts/release-mgmt/ mediacheck
          RETVAL=$?

          cleanup

          # only enable jtsync when build is not manually triggered
          if [[ "${ROOT_BUILD_CAUSE}" != "MANUALTRIGGER" ]]; then
            trap - EXIT ERR
            $jtsync --ci suse --matrix ${project},${subproject},${BUILD_NUMBER} $RETVAL || :
          fi
