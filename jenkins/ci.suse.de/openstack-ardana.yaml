- job:
    name: openstack-ardana
    concurrent: true
    workspace: "openstack-ardana-$BUILD_ID"
    # the selected node needs the cloud credentials
    node: cloud-ardana-ci
    wrappers:
      - timestamps
      - build-name:
          name: '#${BUILD_NUMBER}: ${ENV,var="job_name"}/${ENV,var="model"}'

      - timeout:
          timeout: 300
          type: no-activity
          abort: true
          write-description: "Job aborted due to 180 minutes of inactivity"

    logrotate:
      numToKeep: 2000
      daysToKeep: 300

    parameters:
      - string:
          name: git_automation_repo
          default: https://github.com/SUSE-Cloud/automation.git
          description: >-
            The git automation repository to use

      - string:
          name: git_automation_branch
          default: master
          description: >-
            The git automation branch

      - string:
          name: git_input_model_repo
          default: git://git.suse.provo.cloud/ardana/ardana-input-model
          description: >-
            The git repository to use for input models

      - string:
          name: git_input_model_branch
          default: master
          description: >-
            The git repository branch to use for input models

      - string:
          name: git_input_model_path
          default: 2.0/ardana-ci
          description: >-
            Relative path in the input model git repository where the input models are located

      - string:
          name: model
          default: std-min
          description: >-
            The Input Model to use from the input model git repository / branch / path

      - string:
          name: job_name
          default: ''
          description: >-
            This name reserves job environment and prevents deletion at the end.

      - choice:
          name: cloudsource
          choices:
            - stagingcloud8
            - develcloud8
            - GM8
            - stagingcloud9
            - develcloud9
          description: >-
            The cloud repository (from provo-clouddata) to be used for testing.
            This value can take the following form:

               stagingcloud<X> (Devel:Cloud:X:Staging)
               develcloud<X> (Devel:Cloud:X)
               GM<X> (official GM)

      - extended-choice:
          name: repositories
          type: multi-select
          value: SLES-Pool,SLES-Updates,SLES-Updates-test,Cloud-Pool,Cloud-Updates,Cloud-Updates-test
          visible-items: 6
          multi-select-delimiter: ','
          default-value: SLES-Pool,SLES-Updates
          description: >-
            Set of zypper repositories (from provo-clouddata) to be configured during installation
            in addition to that indicated by the cloudsource parameter.

      - choice:
          name: update_cloudsource
          choices:
            -
            - stagingcloud8
            - develcloud8
            - GM8
            - stagingcloud9
            - develcloud9
          description: >-
            The cloud media (from provo-clouddata) to be used for update testing. Use a value different than
            cloudsource to enable update testing.

      - extended-choice:
          name: update_repositories
          type: multi-select
          value: SLES-Pool,SLES-Updates,SLES-Updates-test,Cloud-Pool,Cloud-Updates,Cloud-Updates-test
          visible-items: 6
          multi-select-delimiter: ','
          default-value: ''
          description: >-
            Set of repositories to be added after the initial installation and used
            during update testing. Select one or more repositories to enable update testing.

      - choice:
          name: update_method
          choices:
            - update
            - patch
            - dist-upgrade
          description: >-
            The update method used for update testing.

      - string:
          name: tempest_run_filter
          default: ''
          description: >-
            Name of the filter file to use for tempest. Possible values:
            ci, compute, designate, lbaas, network, neutron-api, periodic,
            periodic-virtual, refstack, smoke, swift, tests2skip, tests-ci,
            upgrade-ci or upgrade

      - string:
          name: build_pool_name
          default: ''
          description: >-
            Name of the build resource pool to be used for this job. When
            supplied, the heat stack created by this job will be added to the
            build pool and will be cleaned up automatically when the pool fills up.

      - string:
          name: build_pool_size
          default: '0'
          description: >-
            The maximum number of heat stacks in the build_pool_name build pool
            that can be kept running at any given time. When this number is exceeded,
            older stacks in the pool will be deleted to make place for new ones.

      - string:
          name: gerrit_change_ids
          default: ''
          description: >-
            A comma separated list of IDs for changes in
            gerrit.suse.provo.cloud to test.

      - string:
          name: develproject
          default: 'Devel:Cloud:8'
          description: >-
            Project in IBS to link against when creating a test project for a
            change proposal.

      - string:
          name: homeproject
          default: 'home:opensuseapibmw'
          description: >-
            Project in IBS that will act as the parent project for the newly
            generated test project.

      - string:
          name: repository
          default: 'SLE_12_SP3'
          description: >-
            Name of the repository in IBS against which to build the test packages.

      - string:
          name: want_caasp
          default:
          description: >-
            Set to 1 to deploy CaaSP using the caasp-openstack-heat-templates.

    builders:
      - conditional-step:
          condition-kind: shell
          condition-command: |
            test -n "${gerrit_change_ids}"
          steps:
              - trigger-builds:
                - project: cloud-ardana-testbuild-gerrit
                  predefined-parameters: |
                    gerrit_change_ids=${gerrit_change_ids}
                    develproject=${develproject}
                    homeproject=${homeproject}
                    repository=${repository}
                    git_automation_repo=${git_automation_repo}
                    git_automation_branch=${git_automation_branch}
                  block: true
      - shell: |
          set +x

          echo cloudsource=$cloudsource
          echo

          set -ex
          heat_stack_name=cloud-ci-openstack-ardana-${BUILD_NUMBER}
          if [ -n "${JOB_NAME}" ]; then
              heat_stack_name=${heat_stack_name}-${JOB_NAME}
          fi

          export ANSIBLE_KEEP_REMOTE_FILES=1

          # init the git tree
          git clone $git_automation_repo --branch $git_automation_branch automation-git
          if [ "$git_automation_repo" != "$git_input_model_repo" ]; then
              git clone $git_input_model_repo --branch $git_input_model_branch ardana-input-model-git
              input_model_path="$WORKSPACE/ardana-input-model-git/${git_input_model_path}/${model}"
          else
              input_model_path="$WORKSPACE/automation-git/${git_input_model_path}/${model}"
          fi
          rsync -av $input_model_path/* $WORKSPACE/input-model

          pushd automation-git/scripts/jenkins/ardana/ansible
          source /opt/ansible/bin/activate

          if [ $want_caasp == '1' ]; then
            virt_config_file="caasp.yml"
          fi

          # generate the heat template
          ansible-playbook -v generate-heat.yml \
            -e cloudsource="${cloudsource}" \
            -e input_model_path="$WORKSPACE/input-model" \
            -e heat_template_file="$WORKSPACE/heat-ardana-${model}.yaml" \
            -e virt_config_file="$virt_config_file"

          # generate properties file
          cat - > $WORKSPACE/heat_stack_env <<EOF
          build_pool_name=$build_pool_name
          build_pool_size=$build_pool_size
          heat_stack_name=$heat_stack_name
          heat_template_file=$WORKSPACE/heat-ardana-${model}.yaml
          input_model_path=$WORKSPACE/input-model
          EOF

      - trigger-builds:
        - project: openstack-ardana-heat
          predefined-parameters: |
            action=create
          property-file: heat_stack_env
          block: true

      - trigger-builds:
        - project: openstack-ardana-heat
          predefined-parameters: |
            action=cleanup
            build_pool_name=$build_pool_name
            build_pool_size=$build_pool_size
          block: false

      - shell: |
          set -x

          export automationrepo=~/github.com/SUSE-Cloud/automation
          # automation bootstrapping
          if ! [ -e ${automationrepo}/scripts/jenkins/update_automation ] ; then
            rm -rf ${automationrepo}
            curl https://raw.githubusercontent.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation | bash
          fi

          # fetch the latest automation updates
          ${automationrepo}/scripts/jenkins/update_automation

          # run the builder script in the automation repo
          ${automationrepo}/scripts/jenkins/openstack-ardana-heat.builder.sh

          # Deploy CaaSP
          if [ $want_caasp == '1' ]; then
            ansible-playbook -v -i hosts \
                deploy-caasp.yml
          fi

    publishers:
      - trigger-parameterized-builds:
        - project: openstack-ardana-heat
          predefined-parameters: |
            action=cleanup
          property-file: heat_stack_env
          condition: ALWAYS
        - project: openstack-ardana-heat
          predefined-parameters: |
            action=cleanup
            build_pool_name=$build_pool_name
            build_pool_size=$build_pool_size
          condition: ALWAYS

      - post-tasks:
        - matches:
          - log-text: DEPLOYER_IP
          script: |
            set +x
            . $WORKSPACE/heat_stack_env
            # the name for the cloud defined in ~./config/openstack/clouds.yaml
            CLOUD_CONFIG_NAME=engcloud-cloud-ci

            if [[ -z $build_pool_name ]] || (( $build_pool_size != 0 )); then
                DEPLOYER_IP=$(openstack --os-cloud $CLOUD_CONFIG_NAME stack output show $heat_stack_name admin-floating-ip -c output_value -f value)
                echo "*****************************************************************"
                echo ""
                if [[ -n $build_pool_name ]]; then
                  echo "** The installation stack will be suspended and will be removed  "
                  echo "** automatically by one of the future job runs that is using the "
                  echo "** same '$build_pool_name' build pool.                           "
                  echo ""
                  echo "** To prevent future jobs from removing the installation, either "
                  echo "** resume the stack or take the stack out of the '$build_pool_name' "
                  echo "** build pool by rebuilding the 'openstack-ardana-heat' job that "
                  echo "** created it with the 'action' parameter set to 'exclude'.      "
                  echo ""
                else
                  echo "** Installation remains available at                             "
                  echo "             ssh ardana@$DEPLOYER_IP                             "
                  echo ""
                  echo "** Please delete the $heat_stack_name stack manually when you're done."
                fi
                echo ""
                echo "*****************************************************************"
            fi
      - workspace-cleanup:
          clean-if:
            - failure: false
            - aborted: false
            - unstable: false
            - success: false
