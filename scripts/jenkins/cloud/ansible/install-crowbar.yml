---

- name: Install Crowbar on admin node
  hosts: "{{ cloud_env }}"
  remote_user: root
  gather_facts: True
  vars:
    task: "deploy"

  pre_tasks:
    - include_role:
        name: rocketchat_notify
      vars:
        rc_action: "started"
        rc_state: "Started"
      when:
        - rc_notify
        - rc_notify_start
        - not is_physical_deploy

  tasks:
    - block:
        - name: Log stream at
          debug:
            msg: "http://{{ ansible_host }}:9091/"

        - include_role:
            name: crowbar_setup
          vars:
            qa_crowbarsetup_cmd: "onadmin_{{ command }}"
          loop:
            - bootstrapcrowbar
            - installcrowbar
          loop_control:
            loop_var: command

        # TODO replace the below with environment var crowbar_sync_mark_timeout_multiplier to qa_crowbarsetup above
        - name: Check if sync mark timeout_multiplier feature is present
          command: "knife data bag show crowbar-config -F json"
          register: _crowbar_config_json

        - block:
            - name: Get sync_mark json from data bag
              command: "knife data bag show crowbar-config sync_mark -F json"
              register: _sync_mark_json

            - name: Update timeout_multiplier value to {{ sync_mark_timeout_multiplier }}
              set_fact:
                _sync_mark_updated: "{{ _sync_mark_json.stdout | from_json | combine(
                  { 'timeout_multiplier': sync_mark_timeout_multiplier|float }) }}"

            - name: Generate json with updated sync_mark
              copy:
                content: "{{ _sync_mark_updated | to_json }}"
                dest: "/tmp/crowbar_sync_mark.json"

            - name: Insert json with updated sync_mark timeout_multiplier on data bag
              command: "knife data bag from file crowbar-config /tmp/crowbar_sync_mark.json"
              register: _data_bag_update_result
              changed_when: _data_bag_update_result.rc == 0
          when:
            - sync_mark_timeout_multiplier != "1.0"
            - "'sync_mark' in (_crowbar_config_json.stdout | from_json)"

        # reboot node after crowbar install
        - include_role:
            name: reboot_node
          vars:
            reboot_target: deployer
          when:
            - reboot_after_deploy
            - not update_after_deploy

      rescue:
        - include_role:
            name: rocketchat_notify
          vars:
            rc_action: "finished"
            rc_state: "Failed"
          when: rc_notify

        - name: Stop if something failed
          fail:
            msg: "{{ task }} failed."
      always:
        - include_role:
            name: jenkins_artifacts
          when: lookup("env", "WORKSPACE")
          vars:
            jenkins_artifacts_to_collect:
              - src: "{{ admin_mkcloud_config_file }}"
              - src: "{{ admin_crowbar_batch_file }}"
              - src: "{{ qa_crowbarsetup_log }}"

  post_tasks:
    - include_role:
        name: rocketchat_notify
      vars:
        rc_action: "finished"
        rc_state: "Success"
      when:
        - rc_notify
