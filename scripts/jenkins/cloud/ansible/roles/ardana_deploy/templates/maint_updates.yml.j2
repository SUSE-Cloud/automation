#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: Apply package maintenance updates
  hosts: resources
  become: yes
  vars:
    maint_updates_list: {{ maint_updates_list | to_yaml }}
    sles_sp: {{ ansible_distribution_release }}
    cloud_release: {{ cloud_release }}
    maintenance_updates_server: {{ maintenance_updates_server }}
    maintenance_updates_path:
      Cloud: "SUSE_Updates_{{ cloudsource.startswith('hos') | ternary('HPE-Helion-OpenStack', 'OpenStack-Cloud') }}_{{ sles_cloud_version[ansible_distribution_version] }}_x86_64"
      SLES: "SUSE_Updates_SLE-SERVER_{{ ansible_distribution_major_version }}-SP{{ ansible_distribution_release }}_x86_64"
{% raw %}
    deployer_ip: "{{ hostvars[groups['ARD-SVC--first-member'].0].ansible_ssh_host }}"

  tasks:
    - name: Check MU URL
      command: "curl http://{{ maintenance_updates_server }}/ibs/SUSE:/Maintenance:/{{ item }}/"
      with_items: "{{ maint_updates_list }}"
      register: mu_url
      run_once: true

    - name: Ensure maint update zypper repositories
      zypper_repository:
        name: "{{ item.1 }}-Maint-Update-{{ item.0 }}"
        repo: "http://{{ deployer_ip }}:79/SUSE-12-{{ sles_sp }}/x86_64/repos/{{ item.0 }}/{{ maintenance_updates_path[item.1] }}/"
        state: present
      with_nested:
        - "{{ maint_updates_list }}"
        - "{{ maintenance_updates_path }}"
      when:
        - "maintenance_updates_path[item.1] in mu_url.results | selectattr('item', 'equalto', item.0) | map(attribute='stdout_lines') | join(' ')"
        - ansible_distribution == 'SLES'
      become: yes

    - name: Run zypper update
      zypper:
        name: "*"
        state: latest
      when: ansible_distribution == 'SLES'

    - name: Check if reboot required
      shell: |
        LAST_KERNEL=$(ls -t /boot/vmlinuz-* | sed "s/\/boot\/vmlinuz-//g" | head -n1)
        CURRENT_KERNEL=$(uname -r)
        test $LAST_KERNEL = $CURRENT_KERNEL || echo True
      register: reboot
      when: ansible_distribution == 'SLES'

    - name: Reboot nodes
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      async: 1
      poll: 0
      failed_when: false
      when:
        - ansible_distribution == 'SLES'
        - reboot.stdout == 'True'

    - name: Wait for nodes to come back after reboot
      wait_for:
        host: "{{ ansible_ssh_host }}"
        search_regex: OpenSSH
        port: 22
        delay: 30
      when:
        - ansible_distribution == 'SLES'
        - reboot.stdout == 'True'
      connection: local

{% endraw %}
