#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- name: Check input model path
  stat:
    path: '{{ input_model_path }}'
  register: _stat_result

- name: Fail if input model path isn't there
  fail:
    msg: "Input model path not found: '{{ input_model_path }}'"
  when: not _stat_result.stat.exists

- name: Import virtual configuration
  include_vars:
    file: '{{ virt_config_file }}'
  when: virt_config_file is defined and virt_config_file != ''

- name: Import input model
  load_input_model:
    path: '{{ input_model_path }}'
  register: import_result

- name: Fail if input model is empty
  fail:
    msg: "Loaded empty input model definition from '{{ input_model_path }}'"
  when: not import_result.input_model

- name: Generate heat model
  generate_heat_model:
    input_model: '{{ import_result.input_model }}'
    virt_config: '{{ virt_config }}'
  register: heat_result

- name: Generate heat orchestration template
  template:
    src: "heat-template.yaml"
    dest: "{{ heat_template_file }}"
  vars:
    input_model: '{{ import_result.input_model }}'
    heat_template: '{{ heat_result.heat_template }}'

- name: Add virtual NIC mappings to input model
  template:
    src: "virtual_nic_mappings.yml"
    dest: "{{ input_model_path }}/data/virtual_nic_mappings.yml"
  vars:
    input_model: '{{ heat_result.input_model }}'

- name: Re-generate input model servers file
  template:
    src: "servers.yml"
    dest: "{{ input_model_path }}/data/servers.yml"
  vars:
    input_model: '{{ heat_result.input_model }}'

- name: Update input model disks to accomodate virtio_blk
  replace:
    dest: '{{ item.src }}'
    regexp: '/dev/sd([a-z])'
    replace: '/dev/vd\1'
  with_filetree: '{{ input_model_path }}'
  loop_control:
    label: "{{ item.path }}"
  when: item.state == 'file'
  ignore_errors: True

- name: Update DNS and NTP servers in input model
  dns_update:
    dns_servers: "{{ dns_servers }}"
    ntp_servers: "{{ ntp_servers }}"
    cloud_config: "{{ input_model_path }}/cloudConfig.yml"
