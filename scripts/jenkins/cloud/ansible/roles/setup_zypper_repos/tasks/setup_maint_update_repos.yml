#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: Find cloud product
  shell: "zypper lr | grep 'OpenStack.*Pool' | cut -d'|' -f2"
  args:
    warn: False
  register: cloud_repo_name

- name: Set cloud MU repo path based on product - Ardana
  set_fact:
    cloud_repo_path: "{{ ('HPE-Helion' in cloud_repo_name.stdout) | ternary('HPE-Helion-OpenStack', 'OpenStack-Cloud') }}"
  when: cloud_product != 'crowbar'

- name: Set cloud MU repo path based on product - Crowbar
  set_fact:
    cloud_repo_path: "{{ (sles_cloud_version[ansible_distribution_version] == 7)| ternary ('OpenStack-Cloud', 'OpenStack-Cloud-Crowbar') }}"
  when: cloud_product == 'crowbar'

- name: Check MU URL
  uri:
    url: "http://{{ maintenance_updates_server }}/ibs/SUSE:/Maintenance:/{{ item }}/"
    return_content: yes
  loop: "{{ maint_updates_list }}"
  register: mu_url

- name: Ensure MU directories exists
  file:
    state: directory
    path: "{{ local_repos_base_dir }}/{{ item }}"
  loop: "{{ maint_updates_list }}"

# This tasks is responsible for finding to which product the MUs are targeted for.
# This is done by combining the MU IDs with the MU paths (for Cloud and SLES)
# and for each combination it checks if the Cloud or SLES MU path is present on
# the MU page content which registered in the mu_url variable.
- name: Rsync MU repositories
  synchronize:
    mode: pull
    src: "rsync://{{ maintenance_updates_server }}:/repos/SUSE:/Maintenance:/{{ item.0 }}/{{ maintenance_updates_path[item.1] }}"
    dest: "{{ local_repos_base_dir }}/{{ item.0 }}/"
    rsync_opts:
      - "--sparse"
      - "--hard-links"
      - "--fuzzy"
      - "--delete-delay"
  delegate_to: "{{ inventory_hostname }}"
  when: "maintenance_updates_path[item.1] in mu_url.results | selectattr('item', 'equalto', item.0) | map(attribute='content') | join(' ')"
  loop: "{{ maint_updates_list | product(maintenance_updates_path) | list }}"
  register: mu_sync_result
  retries: 5
  until: mu_sync_result.rc != 24
  delay: 300

- name: Add MU zypper repositories
  zypper_repository:
    name: "{{ item.1 }}-Maint-Update-{{ item.0 }}"
    repo: "{{ local_repos_base_dir }}/{{ item.0 }}/{{ maintenance_updates_path[item.1] }}/"
    runrefresh: yes
    state: present
  when: "maintenance_updates_path[item.1] in mu_url.results | selectattr('item', 'equalto', item.0) | map(attribute='content') | join(' ')"
  loop: "{{ maint_updates_list | product(maintenance_updates_path) | list }}"
  notify:
    - Refresh all repos
