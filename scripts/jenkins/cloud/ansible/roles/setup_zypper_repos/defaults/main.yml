#
# (c) Copyright 2019 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

#
# zypper repo management
#
zypper_repo_enabled: yes
zypper_repo_state: "present"
# set to true to delete repo backing content from the system;
# only valid if enabled==no and state==absent
zypper_repo_delete: false

setup_cloud_info:
  cloud9:
    sles_version: 12.4
  cloud8:
    sles_version: 12.3
  cloud7:
    sles_version: 12.2

setup_sles_version: "{{ setup_cloud_info[cloud_release].sles_version }}"
setup_sles_major_version: "{{ setup_sles_version.split('.')[0] }}"
setup_sles_minor_version: "{{ setup_sles_version.split('.')[1] }}"
setup_suse_release: "suse-{{ setup_sles_version }}"

clouddata_server: "provo-clouddata.cloud.suse.de"
repos_url: "http://{{ clouddata_server }}/repos/{{ ansible_architecture }}"
is_milestone: "{{ cloudsource is match('cloud\\d(M\\d|RC\\d|GMC)') }}"
built_from: "{{ repos_url}}/{{ base_repos.0 }}"
media_build_version: "{{ cloud_media_build_version.content | b64decode }}"
include_maint_update: "{{ (task == 'deploy' and not update_after_deploy) or (task == 'update') }}"

# Media/repositories mapped by the cloudsource value
cloudsource_repos:
  stagingcloud7: "SUSE-OpenStack-Cloud-7-devel-staging"
  develcloud7: "SUSE-OpenStack-Cloud-7-devel"
  GM7: "SUSE-OpenStack-Cloud-7-Pool"
  stagingcloud8: "SUSE-OpenStack-Cloud-8-devel-staging"
  develcloud8: "SUSE-OpenStack-Cloud-8-devel"
  GM8: "SUSE-OpenStack-Cloud-8-Pool"
  hosdevelcloud8: "HPE-Helion-OpenStack-8-devel"
  hosGM8: "HPE-Helion-OpenStack-8-Pool"
  stagingcloud9: "SUSE-OpenStack-Cloud-9-devel-staging"
  develcloud9: "SUSE-OpenStack-Cloud-9-devel"
  GM9: "SUSE-OpenStack-Cloud-9-Pool"

cloud_brand: "{{ cloudsource.startswith('hos') | ternary('HPE-Helion-OpenStack', 'SUSE-OpenStack-Cloud') }}"
cloud_pool_tag: "SLE-{{ setup_sles_major_version }}-SP{{ setup_sles_minor_version }}:Update:Products:Cloud{{ cloud_release_number }}/{{ cloud_brand | lower }}/{{ cloud_release_number }}/POOL/{{ ansible_architecture }}"
cloud_updates_tag: "Updates:{{ cloud_brand | replace('SUSE-', '') }}:{{ cloud_release_number }}:{{ ansible_architecture }}/update"

repository_mnemonics:
  cloud7:
    SLES-Pool: "SLES12-SP2-Pool"
    SLES-Updates: "SLES12-SP2-Updates"
    SLES-Updates-test: "SLES12-SP2-Updates-test"
    SLES-LTSS-Updates: "SLES12-SP2-LTSS-Updates"
    SLES-LTSS-Updates-test: "SLES12-SP2-LTSS-Updates-test"
    Cloud-Updates: "{{ cloud_brand }}-7-Updates"
    Cloud-Updates-test: "SUSE-OpenStack-Cloud-7-Updates-test"
  cloud8:
    SLES-Pool: "SLES12-SP3-Pool"
    SLES-Updates: "SLES12-SP3-Updates"
    SLES-Updates-test: "SLES12-SP3-Updates-test"
    SLES-LTSS-Updates: "SLES12-SP3-LTSS-Updates"
    SLES-LTSS-Updates-test: "SLES12-SP3-LTSS-Updates-test"
    Cloud-Updates: "{{ cloud_brand }}-8-Updates"
    Cloud-Updates-test: "SUSE-OpenStack-Cloud-8-Updates-test"
  cloud9:
    SLES-Pool: "SLES12-SP4-Pool"
    SLES-Updates: "SLES12-SP4-Updates"
    SLES-Updates-test: "SLES12-SP4-Updates-test"
    SLES-LTSS-Updates: "SLES12-SP4-LTSS-Updates"
    SLES-LTSS-Updates-test: "SLES12-SP4-LTSS-Updates-test"
    Cloud-Updates: "SUSE-OpenStack-Cloud-9-Updates"
    Cloud-Updates-test: "SUSE-OpenStack-Cloud-9-Updates-test"

base_repos:
  - "{{ cloudsource_repos[cloudsource | replace('+up', '')] }}"
  - "{{ repository_mnemonics[cloud_release]['SLES-Pool'] }}"
  - "{{ repository_mnemonics[cloud_release]['SLES-Updates'] }}"
cloud_update_repos:
  - "{{ repository_mnemonics[cloud_release]['Cloud-Updates'] }}"
sles_test_repos:
  - "{{ repository_mnemonics[cloud_release]['SLES-Updates-test'] }}"
cloud_test_repos:
  - "{{ repository_mnemonics[cloud_release]['Cloud-Updates-test'] }}"
sles_ltss_update_repos:
  - "{{ repository_mnemonics[cloud_release]['SLES-LTSS-Updates'] }}"
sles_ltss_test_repos:
  - "{{ repository_mnemonics[cloud_release]['SLES-LTSS-Updates-test'] }}"

sles_ltss_enabled:
  cloud7: true
  cloud8: false
  cloud9: true

cloud_update_repos_enabled: "{{ '+up' in cloudsource }}"
sles_test_repos_enabled: "{{ updates_test_enabled and ((task == 'deploy' and not (update_after_deploy and 'GM' in cloudsource)) or (task in ['update', 'disable-repos', 'upgrade'])) }}"
cloud_test_repos_enabled: "{{ updates_test_enabled and 'GM' in cloudsource and ((task == 'deploy' and not update_after_deploy) or (task in ['update', 'disable-repos', 'upgrade'])) }}"

repos_to_mount_regexp: "{{ sles_ltss_enabled[cloud_release] | ternary('.*-Pool$|.*SP\\d-Updates$', '.*-Pool$') }}"
repos_to_mount: "{{ repos_to_manage | select('search', repos_to_mount_regexp) | list }}"
repos_to_sync: "{{ repos_to_manage | difference(repos_to_mount) }}"

extra_repos_list: "{{ extra_repos.split(',') if extra_repos is defined and extra_repos | length > 0 else [] }}"
cloudsource_repo: "{{ (task == 'update' and cloudsource is defined and cloudsource != '') | ternary('Updates', 'Pool') }}"
zypper_repo_name: "{{ item | regex_replace('devel.*', cloudsource_repo) }}"

local_repos_web_dir_prefix: "{{ (cloud_product == 'crowbar') | ternary('tftpboot', 'www') }}"
local_repos_base_dir: "/srv/{{ local_repos_web_dir_prefix }}/{{ setup_suse_release }}/{{ ansible_architecture }}/repos"

#media_versions
ardana_media_version_src_file: "{{ local_repos_base_dir }}/{{ base_repos.0 | regex_replace('devel.*', 'Pool') }}/media.1/build"
crowbar_media_version_src_file: "/etc/motd"
