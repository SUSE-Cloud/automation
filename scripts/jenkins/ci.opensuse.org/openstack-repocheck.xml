<?xml version="1.0" encoding="UTF-8"?>
<matrix-project plugin="matrix-project@1.4.1">
  <actions/>
  <description>Check OBS repositories for installcheck issues</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>14</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.14">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.scm.SCM.Tag:aspiers</permission>
      <permission>hudson.scm.SCM.Tag:jdsn</permission>
      <permission>hudson.scm.SCM.Tag:cloud</permission>
      <permission>hudson.scm.SCM.Tag:dirkmueller</permission>
      <permission>hudson.scm.SCM.Tag:mjura</permission>
      <permission>hudson.scm.SCM.Tag:bmwiedemann</permission>
      <permission>hudson.model.Run.Delete:jdsn</permission>
      <permission>hudson.model.Run.Delete:cloud</permission>
      <permission>hudson.model.Run.Delete:dirkmueller</permission>
      <permission>hudson.model.Run.Delete:bmwiedemann</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:aspiers</permission>
      <permission>hudson.model.Item.Read:jdsn</permission>
      <permission>hudson.model.Item.Read:cloud</permission>
      <permission>hudson.model.Item.Read:dirkmueller</permission>
      <permission>hudson.model.Item.Read:mjura</permission>
      <permission>hudson.model.Item.Read:bmwiedemann</permission>
      <permission>hudson.model.Item.Discover:aspiers</permission>
      <permission>hudson.model.Item.Discover:jdsn</permission>
      <permission>hudson.model.Item.Discover:cloud</permission>
      <permission>hudson.model.Item.Discover:dirkmueller</permission>
      <permission>hudson.model.Item.Discover:mjura</permission>
      <permission>hudson.model.Item.Discover:bmwiedemann</permission>
      <permission>hudson.model.Item.Build:aspiers</permission>
      <permission>hudson.model.Item.Build:jdsn</permission>
      <permission>hudson.model.Item.Build:cloud</permission>
      <permission>hudson.model.Item.Build:dirkmueller</permission>
      <permission>hudson.model.Item.Build:mjura</permission>
      <permission>hudson.model.Item.Build:bmwiedemann</permission>
      <permission>hudson.model.Item.Cancel:jdsn</permission>
      <permission>hudson.model.Item.Cancel:cloud</permission>
      <permission>hudson.model.Item.Cancel:dirkmueller</permission>
      <permission>hudson.model.Item.Cancel:bmwiedemann</permission>
      <permission>hudson.model.Item.Workspace:jdsn</permission>
      <permission>hudson.model.Item.Workspace:cloud</permission>
      <permission>hudson.model.Item.Workspace:dirkmueller</permission>
      <permission>hudson.model.Item.Workspace:bmwiedemann</permission>
      <permission>hudson.model.Item.Delete:jdsn</permission>
      <permission>hudson.model.Item.Delete:dirkmueller</permission>
      <permission>hudson.model.Item.Delete:bmwiedemann</permission>
      <permission>hudson.model.Item.Configure:jdsn</permission>
      <permission>hudson.model.Item.Configure:cloud</permission>
      <permission>hudson.model.Item.Configure:dirkmueller</permission>
      <permission>hudson.model.Item.Configure:bmwiedemann</permission>
      <permission>hudson.model.Run.Update:aspiers</permission>
      <permission>hudson.model.Run.Update:jdsn</permission>
      <permission>hudson.model.Run.Update:cloud</permission>
      <permission>hudson.model.Run.Update:dirkmueller</permission>
      <permission>hudson.model.Run.Update:mjura</permission>
      <permission>hudson.model.Run.Update:bmwiedemann</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>cloud-trackupstream</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H * * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Cloud:OpenStack:Icehouse</string>
        <string>Cloud:OpenStack:Icehouse:Staging</string>
        <string>Cloud:OpenStack:Juno</string>
        <string>Cloud:OpenStack:Juno:Staging</string>
        <string>Cloud:OpenStack:Kilo</string>
        <string>Cloud:OpenStack:Kilo:Staging</string>
        <string>Cloud:OpenStack:Liberty</string>
        <string>Cloud:OpenStack:Liberty:Staging</string>
        <string>Cloud:OpenStack:Master</string>
        <string>Cloud:Tools</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>repository</name>
      <values>
        <string>SLE_11_SP3</string>
        <string>SLE_12</string>
        <string>openSUSE_13.2</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>cloud-trackupstream</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <combinationFilter>!(       ["Cloud:OpenStack:Master"].contains(project) &amp;&amp; ["SLE_11_SP3"].contains(repository) ||        ["Cloud:OpenStack:Factory"].contains(project) &amp;&amp; ["SLE_11_SP3", "SLE_12"].contains(repository) || ["Cloud:OpenStack:Havana", "Cloud:OpenStack:Havana:Staging"].contains(project) &amp;&amp; ["SLE_12", "openSUSE_13.2", "openSUSE_Factory"].contains(repository) ||        ["Cloud:OpenStack:Icehouse", "Cloud:OpenStack:Icehouse:Staging"].contains(project) &amp;&amp; ["SLE_12", "openSUSE_13.2", "openSUSE_Factory"].contains(repository) ||      ["Cloud:OpenStack:Juno", "Cloud:OpenStack:Juno:Staging"].contains(project) &amp;&amp; ["openSUSE_Factory"].contains(repository)  ||      ["Cloud:OpenStack:Kilo", "Cloud:OpenStack:Kilo:Staging"].contains(project) ||      ["Cloud:OpenStack:Liberty", "Cloud:OpenStack:Liberty:Staging"].contains(project) &amp;&amp; ["openSUSE_Factory", "SLE_11_SP3"].contains(repository) )</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>PROJECTSOURCE=OBS/${project}

# needs .oscrc with user,pass,trusted_prj
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools/SLE_11_SP2/openSUSE:Tools.repo
# zypper ar http://download.opensuse.org/repositories/openSUSE:/Tools:/Unstable/SLE_11_SP2/openSUSE:Tools:Unstable.repo
# zypper in osc obs-service-tar_scm obs-service-github_tarballs obs-service-recompress obs-service-git_tarballs obs-service-set_version
[ -z "$PROJECTSOURCE" ] &amp;&amp; ( echo "Error: no PROJECTSOURCE defined." ; exit 1 )

mkdir -p ~/bin
[ -e ~/bin/update_automation ] || wget -O ~/bin/update_automation https://raw.github.com/SUSE-Cloud/automation/master/scripts/jenkins/update_automation &amp;&amp; chmod a+x ~/bin/update_automation
# fetch the latest automation updates
update_automation


DIST_NAME=$(echo $repository|cut -d "_" -f 1)
DIST_VERSION=$(echo $repository|cut -d "_" -f 2-)


### NOTE(dmueller): Removed, the script is not checking repos correctly
# repochecker script runs with -e so this aborts
# REPCHECK_DIST_VERSION=$DIST_VERSION REPCHECK_DIST_NAME=$DIST_NAME REPCHECK_PROJECT=$project bash -x /root/github.com/SUSE-Cloud/automation/scripts/repochecker

# exit 0


OBS_TYPE=${PROJECTSOURCE%%/*}
OBS_PROJECT=${PROJECTSOURCE##*/}

case $OBS_TYPE in
  OBS) OSCAPI="https://api.opensuse.org"
       OSC_BUILD_ARCH=x86_64
       case $OBS_PROJECT in
           *)
               OSC_BUILD_DIST=SLE_11_SP3
               ;;
       esac
       ;;
  *)   echo "This jenkins instance only interacts with OBS."
       exit 1
       ;;
esac

fetch_primary_xml()
{
    local repo=$1
    disturl=$2
    local host="http://download.opensuse.org/repositories/"
    test -n "$3" &amp;&amp; host=$3
    mkdir -p tmp/repo
    rm -rf tmp/repo/repomd.xml tmp/repo/primary.xml.gz
    curl -fs $host/$repo/$disturl/repodata/repomd.xml &gt; tmp/repo/repomd.xml
    primary=$(grep "location.*primary.xml" tmp/repo/repomd.xml | cut -d'"' -f2)
    curl -Lfs $host/$repo/$disturl/$primary &gt; tmp/repo/primary.xml.gz
    test -s tmp/repo/primary.xml.gz || { echo "failed to download primary.xml!"; rm -f tmp/repo/primary.xml.gz; exit 1; }
    rm -f tmp/repo/repomd.xml
}

ARCH=x86_64

slashed_project=$(echo $project | sed -e 's,:,:\/,g')
non_staging_project=${slashed_project%%:/Staging}

EXTRA_NOCHECK=""

if [ "$slashed_project" != "$non_staging_project" ]; then
  EXTRA_NOCHECK="tmp/repo/nonstaging_primary.xml.gz"
  fetch_primary_xml $non_staging_project $repository
  mv tmp/repo/primary.xml.gz $EXTRA_NOCHECK
fi

fetch_primary_xml $slashed_project $repository

test -e ~/repo || { echo "~/repo needs to have a copy of pre-generated .solv files from internal media" ; exit 55; }
installcheck $ARCH --withobsoletes --exclude "-kmp-" tmp/repo/primary.xml.gz  --nocheck $EXTRA_NOCHECK ~/repo/${repository}-${ARCH}.solv

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
