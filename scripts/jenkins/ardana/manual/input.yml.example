---
#============= Eng. Cloud =============#
# The OpenStack API credentials used to manage virtual clouds
# (leave empty to use the default shared 'cloud' ECP account - 'engcloud-cloud-ci')
os_cloud: 'engcloud-cloud-ci'

# The virtual or hardware environment identifier. This field should either be set to one
# of the value that will identify the created virtual environment.
# WARNING: if a virtual environment associated with the supplied ardana_env already
# exists, it will be replaced.
ardana_env: ''

# If left unchecked, the cloud deployment steps will be skipped. This option can be used
# if you only need to set up the infrastructure and configure the cloud media and
# repositories, but skip the actual cloud deployment, e.g. for testing purposes.
deploy_cloud: true


#============= Repositories =============#
# The cloud repository (from provo-clouddata) to be used for testing. This value can take
# the following form:
#   stagingcloud<X> (Devel:Cloud:X:Staging)
#   develcloud<X> (Devel:Cloud:X)
#   GM<X> (official GM)
#   GM<X>+up (official GM plus Cloud-Updates)
#   cloud9MX (cloud 9 milestones)
cloudsource: 'GM8+up'

# Enable SLES/Cloud test update repos (the Cloud test update repos will be enabled only
# when cloudsource is GM based)
updates_test_enabled: false

# Run ardana update after the cloud is deployed. If true the MU's will be applied only
# after the cloud is deployed.
update_after_deploy: false

# Only valid if update_after_deploy is true. The cloud repository (from provo-clouddata)
# to be used to update.
# This opention takes the same values as cloudsource.
update_to_cloudsource: ''

# List of maintenance update IDs separated by comma (eg. 7396,7487)
maint_updates: ''

# A comma separated list of repository urls (ending with .repo) to be added on the deployer node.
extra_repos: ''


#============= Gerrit =============#
# A comma separated list of IDs for changes in gerrit.prv.suse.net to test.
# The patchset may be supplied as part of the change ID in the form: <change_number>[/<patchset_number>]
gerrit_change_ids: ''

# Project in IBS that will act as the parent project for the newly generated test project.
# E.g. 'home:<username>'
homeproject: ''


#============= Input model =============#
# The name of cloud product which will be deployed. Default is ardana and
# possible values are:
# - crowbar
# - ardana (default)
cloud_product: ''

# The name of the one of the available 'ardana-ci' input models to use from
# the ardana-input-model git repository.
# NOTE: use this parameter only if you want to use an existing input model.
# To generate an input model instead, leave this field empty and use the
# 'scenario_name' parameter instead.
model: ''

# The name of one of the available scenarios that can be used to generate input models.
# If this parameter is set, the following parameters may also be set to different values,
# to control various aspects of the generated input model: clm_model, controllers, core_nodes,
# lmm_nodes, dbmq_nodes, neutron_nodes, swift_nodes, sles_computes, rhel_computes and
# disabled_services.
# NOTE: use this parameter only if you want to use a generated input model. To use an existing
# input model instead, leave this field empty and use the 'model' parameter instead.
# Possible values:
#   - entry-scale-kvm
#   - mid-scale-kvm
#   - standard
#   - std-lmm
#   - std-split
#   - crowbar (for crowbar deployment)
scenario_name: 'entry-scale-kvm'

# Crowbar batch scenario yaml file path (relative to scripts/scenarios)
#  Values examples:
#    - cloud8/cloud8-2nodes-default.yml
#    - cloud8/cloud8-5nodes-compute-ha.yml
#    - cloud9/cloud9-2nodes-default.yml
#    - cloud9/cloud9-5nodes-compute-ha.yml
# NOTE: propably will be removed when input generator works for crowbar
scenario_file: ''

# The type of deployer node deployment to use for the generated input model.
# Possible values:
#   - standalone: one node dedicated for CLM
#   - integrated: the first controller node will also be used as a CLM node
#   - crowbar: right now nothing will happen, it is just to distinguish
# Input model generator scenarios using this parameter : all
# NOTE: this parameter is used to generate input models. See the 'scenario_name' parameter
#  about using one of the available input model generator scenarios.
clm_model: 'integrated'

# The number of controller nodes in the generated input model (0-3).
# Input model generator scenarios using this parameter: standard, entry-scale-kvm.
controllers: '3'

# The number of SLES compute nodes in the generated input model.
# Input model generator scenarios using this parameter: all
# NOTE: Currently all scenarios except crowbar uses 'sles_computes'. When deploying crowbar
# please change sles_computes into 'computes' variable in stead.
# computes: '1'
sles_computes: '2'

# The number of RHEL (CentOS) compute nodes in the generated input model.
# Input model generator scenarios using this parameter: all
rhel_computes: '0'

# The OS distribution and version to use for Ardana RHEL compute nodes.
# Possible values:
#   - CentOS_73
#   - CentOS_75
#   - RHEL_73 (only for BM deployments)
#   - RHEL_75 (only for BM deployments)
rhel_os: 'CentOS_75'

# The number of OpenStack core services nodes in the generated input model (0-3).
# Input model generator scenarios using this parameter: mid-scale-kvm, std-split.
core_nodes: ''

# The number of LMM services nodes in the generated input model (0-3).
# Input model generator scenarios using this parameter: mid-scale-kvm, std-split,
# std-lmm.
lmm_nodes: ''

# The number of database & rabbitmq service nodes in the generated input model (0-3).
# Input model generator scenarios using this parameter: mid-scale-kvm, std-split.
dbmq_nodes: ''

# The number of neutron network nodes in the generated input model (0-3).
# Input model generator scenarios using this parameter: mid-scale-kvm.
neutron_nodes: ''

# The number of swift proxy/account/container/object service nodes in the generated input model (0-3).
# Input model generator scenarios using this parameter: mid-scale-kvm.
swift_nodes: ''

# Regex matching service components and component groups to exclude from the generated input model.
# Input model generator scenarios using this parameter: all
# Example for disabling monasca, ceilometer, freezer and octavia set:
# disabled_services: 'monasca|logging|ceilometer|cassandra|kafka|spark|storm|freezer|octavia'
disabled_services: ''

# Use ipv6 networks in the cloud input model.
ipv6: false


#============= SES =============#
# Configure SES backend for glance, cinder, cinder-backup and nova
ses_enabled: true

# Configure object-store service with RADOS Gateway. This only takes effect
# if ses_enabled is set to true.
ses_rgw_enabled: false


#============= Tests =============#
# Name of the filter file to use for tempest.
# Comma separated values will run tempest for each selected value.
# Use an empty value to skip running tempest.
tempest_filter_list: ''

# Name of the QA tests to run.
# Comma separated values will run QA tests for each selected value.
# Use an empty value to skip running QA tests.
qa_test_list: ''


#============= Rocketchat =============#
# Notify RocketChat when deployment starts/finishes.
rc_notify: false
