#!/bin/bash

# Wrapper script to execute iverify
# within the venv
#
# Usage: remove_node.sh -c <hostname of the compute name to be removed> -n <cobbler node name>
# eg remove_compute_node.sh -c ardana-qe202-cp1-sles-comp0002-mgmt -n 2M25280TT8

set -o pipefail


LOADVMS=1
WORK_HOME={{ ardana_qe_test_work_dir }}
COMPUTE_NODE_NAME={{ compute_node_name }}
COBBLER_NODE_NAME={{ cobbler_node_name }}
work_dir={{ ardana_qe_test_work_dir }}
test_log="$work_dir/remove_compute_node.log"
subunit_log="$work_dir/remove_compute_node.subunit"

venv_dir={{ ardana_qe_test_venv }}
source $venv_dir/bin/activate
subunit_output="$venv_dir/bin/subunit-output"




AUTO_ID="AUTO`date +'%y%m%d%H%M%S'`"

# Run the test

$subunit_output --inprogress remove_compute_node > $subunit_log

#{{ ardana_qe_tests_dir }}/ardana-qa-tests/operational/remove_compute_node.sh -c $COMPUTE_NODE_NAME -n $COBBLER_NODE_NAME -n $AUTO_ID | tee \
 # ${WORK_HOME}/remove_compute_node.log

#/var/lib/ardana/automation/remove_compute_node.sh -c ardana-qe102-cp1-rhel-comp0002-mgmt -n 2M25280TZC -n $AUTO_ID | tee \
# ${WORK_HOME}/remove_compute_node.log

/var/lib/ardana/automation/remove_compute_node.sh -c $COMPUTE_NODE_NAME -n $COBBLER_NODE_NAME -n $AUTO_ID | tee \
 ${WORK_HOME}/remove_compute_node.log
res=$?
success=1

tesres=grep -A 4 'Disabling provisioning on compute host' ${WORK_HOME}/remove_compute_node.log| grep 'QA - testing removing compute node'| gawk '{print $2}'
if $tesres = $COMPUTE_NODE_NAME
   success=1
   echo "$COMPUTE_NODE_NAME disabled"
else 
   success=0
   echo "$COMPUTE_NODE_NAME not able to disable"
fi


if (( $success == 1 )); then
    $subunit_output --success remove_compute_node >> $subunit_log
else
    $subunit_output --fail remove_compute_node >> $subunit_log
fi


exit $res
