#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- include_tasks: monitor.yml

- block:
    - name: Delete stack '{{ heat_stack_name }}'
      os_stack:
        cloud: "{{ os_cloud }}"
        name: "{{ heat_stack_name }}"
        state: absent
        api_timeout: "{{ api_timeout }}"
  rescue:
    - name: Force delete stack resources when delete failed
      shell: |
         openstack --os-cloud {{ os_cloud }} stack resource list --filter \
           type={{ item.type }} -f value -c physical_resource_id {{ heat_stack_name }} |\
           awk '{print "openstack --os-cloud '{{ os_cloud }}' {{ item.name }} \
           delete {{ item.opt_args | default('') }} "$1 }' | sh -x || :
      loop:
        - name: "server"
          type: "OS::Nova::Server"
          opt_args: "--wait"
        - name: "volume"
          type: "OS::Cinder::Volume"
        - name: "network trunk"
          type: "OS::Neutron::Trunk"
        - name: "port"
          type: "OS::Neutron::Port"
        - name: "router"
          type: "OS::Neutron::Router"
        - name: "subnet"
          type: "OS::Neutron::Subnet"
        - name: "network"
          type: "Neutron::Net"

    - name: Retry delete stack
      os_stack:
        cloud: "{{ os_cloud }}"
        name: "{{ heat_stack_name }}"
        state: absent
        api_timeout: "{{ api_timeout }}"
      register: stack_status
      retries: 3
      until: stack_status is success
      delay: 5

  always:
    - include_tasks: monitor.yml
      when: monitor_stack_after_delete
