---
# Accounting for the update scenario which starts from a point
# where the update helper playbooks are not yet present (i.e.
# have not yet been installed via ardana-ansible package updates).
- name: Check that the update helper playbooks have been installed
  stat:
    path: /var/lib/ardana/scratch/ansible/next/ardana/ansible/ardana-reboot.yml
  register: _helper_playbooks_stat_result

- name: Fail if the update helper playbooks have not yet been installed
  fail:
    msg: |
      The update helper playbooks (e.g. ardana-reboot.yml) have not
      been installed on the deployer. These playbooks are required to
      continue testing the reboot workflow.
  when: not _helper_playbooks_stat_result.stat.exists | bool

- name: Reboot node
  shell: |
    ansible-playbook -vvv -i hosts/verb_hosts ardana-reboot.yml \
      --limit {{ ansible_node }}
  args:
    chdir: /var/lib/ardana/scratch/ansible/next/ardana/ansible
  become: true
  become_user: ardana
  register: _deployer_reboot_result
  failed_when: _deployer_reboot_result.rc != 0 and
               not (node_is_deployer and
               'The deployer node needs to be rebooted manually.' in _deployer_reboot_result.stdout)

- name: Re-enable remote root login over ssh
  become: yes
  lineinfile: >
     regexp="^#?PermitRootLogin "
     line="PermitRootLogin yes"
     dest=/etc/ssh/sshd_config
     state=present
  when: node_is_deployer

- name: Reboot deployer
  become: yes
  shell: sleep 2 && shutdown -r now
  async: 1
  poll: 0
  when: node_is_deployer

- name: Wait for deployer to come back up
  delegate_to: localhost
  wait_for:
    host: "{{ ansible_ssh_host | default(inventory_hostname) }}"
    port: 22
    search_regex: OpenSSH
    state: started
    delay: 30
    timeout: 600
  when: node_is_deployer

- name: Wait for deployer to stabilize
  delegate_to: localhost
  wait_for:
    timeout: 300
  when: node_is_deployer

- name: Run post-reboot actions on deployer
  shell: |
    ansible-playbook -vvv -i hosts/verb_hosts _ardana-post-reboot.yml \
      --limit {{ ansible_node }}
  args:
    chdir: /var/lib/ardana/scratch/ansible/next/ardana/ansible
  become: true
  become_user: ardana
  when: node_is_deployer

  # Workaround for bsc#1091479 - start spark on all nodes after rebooting one node
- name: Restart spark on all nodes to correct for bsc#1091479
  shell: |
    ansible-playbook -vvv -i hosts/verb_hosts spark-start.yml
  args:
    chdir: /var/lib/ardana/scratch/ansible/next/ardana/ansible
  become: true
  become_user: ardana
