<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>This job will redeploy the d3.cloud - it will wipe all (two) d3 machines.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.scm.SCM.Tag:cloud</permission>
      <permission>hudson.model.Run.Delete:cloud</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:cloud</permission>
      <permission>hudson.model.Item.Discover:cloud</permission>
      <permission>hudson.model.Item.Build:cloud</permission>
      <permission>hudson.model.Item.Cancel:cloud</permission>
      <permission>hudson.model.Item.Workspace:cloud</permission>
      <permission>hudson.model.Item.Delete:cloud</permission>
      <permission>hudson.model.Item.Configure:cloud</permission>
      <permission>hudson.model.Run.Update:cloud</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>WITHREBOOT</name>
          <description>Enable reboots during the mkcloud run (incl. crowbar and compute node).</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>UPDATEREPOS</name>
          <description>Update repositories (one URL per line)</description>
          <defaultValue>http://download.suse.de/ibs/home:/bmwiedemann:/branches:/SUSE:/SLE-11-SP3:/Update:/Test/standard/</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATEBEFOREINSTALL</name>
          <description>add update repos before crowbar install</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>cloudsource</name>
          <description/>
          <defaultValue>develcloud5</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTHEAD</name>
          <description>if non-empty, test latest version from Devel:Cloud Staging</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>libvirt_type</name>
          <description>possible values: kvm, xen, hyperv, [ lxc, qemu ]</description>
          <defaultValue>kvm</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>networkingplugin</name>
          <description>neutron networking plugin: openvswitch|linuxbridge
Default: openvswitch</description>
          <defaultValue>openvswitch</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>networkingmode</name>
          <description>gre|vlan|vxlan</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.24">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>cloud-mkphyscloud</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>n=3
admin=admin$((n+1))
cloud=d$n
nodenumber=2
tempestoptions="-t"

if [ ! -z "$UPDATEREPOS" ] ; then
  # testing update only makes sense with GMx and without TESTHEAD
  unset TESTHEAD
  export UPDATEREPOS=${UPDATEREPOS//$'\n'/+}
fi

export artifacts_dir=$WORKSPACE/.artifacts
rm -rf $artifacts_dir
mkdir -p $artifacts_dir
touch $artifacts_dir/.ignore
cd /home/jenkins
freshadminvm $admin
sleep 100 # time for the admin VM to boot


# rest of code runs on admin node:
env | grep -e networking -e libvirt -e cloud &gt; mkcloud.config
scp mkcloud.config root@$admin:
ret=0
ssh root@$admin "export cloud=$cloud; export UPDATEREPOS=$UPDATEREPOS ; export UPDATEBEFOREINSTALL=$UPDATEBEFOREINSTALL; export WITHREBOOT=$WITHREBOOT ; export TESTHEAD=$TESTHEAD ; export cloudsource=$cloudsource ; export libvirt_type=$libvirt_type ; export nodenumber=$nodenumber ; "'
  wget -Oqa_crowbarsetup.sh "https://raw.github.com/SUSE-Cloud/automation/master/scripts/qa_crowbarsetup.sh" 
  
  [ $WITHREBOOT == "true" ] &amp;&amp; export rebootsteps="rebootcloud"
  [ $UPDATEBEFOREINSTALL == "true" ] &amp;&amp; export updatesteps="addupdaterepo runupdate"
  timeout --signal=ALRM 150m bash -x -c ". qa_crowbarsetup.sh ; onadmin_runlist prepareinstallcrowbar addupdaterepo installcrowbar allocate $updatesteps waitcloud proposal testsetup $rebootsteps"
' || ret=$?
echo "mkphyscloud ret=$ret"
exit $ret
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>.artifacts/**</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.11">
      <recipients>bwiedemann@suse.de</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.6.2"/>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.3">
      <template>#${BUILD_NUMBER}: ${ENV,var="libvirt_type"}</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>
