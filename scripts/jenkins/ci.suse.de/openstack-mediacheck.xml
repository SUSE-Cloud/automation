<?xml version="1.0" encoding="UTF-8"?>
<matrix-project plugin="matrix-project@1.4.1">
  <actions/>
  <description>Checks if all dependencies of Cloud media are satisfied.</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>20</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.scm.SCM.Tag:cloud</permission>
      <permission>hudson.model.Run.Delete:cloud</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:cloud</permission>
      <permission>hudson.model.Item.Discover:cloud</permission>
      <permission>hudson.model.Item.Build:cloud</permission>
      <permission>hudson.model.Item.Cancel:cloud</permission>
      <permission>hudson.model.Item.Workspace:cloud</permission>
      <permission>hudson.model.Item.Delete:cloud</permission>
      <permission>hudson.model.Item.Configure:cloud</permission>
      <permission>hudson.model.Run.Update:cloud</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.24">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H */2 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Devel:Cloud:4</string>
        <string>Devel:Cloud:5</string>
        <string>Devel:Cloud:5/SLE_12</string>
        <string>Devel:Cloud:6</string>
        <string>Devel:Cloud:6/SLE_12</string>
        <string>Devel:Cloud:Shared:11-SP3:Update</string>
        <string>SUSE:SLE-11-SP3:Update:Cloud5:Test</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>subproject</name>
      <values>
        <string>:</string>
        <string>:Staging</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>cloud-trackupstream-sle12</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <combinationFilter>(["Devel:Cloud:4", "Devel:Cloud:5", "Devel:Cloud:5/SLE_12", "Devel:Cloud:6", "Devel:Cloud:6/SLE_12"].contains(project) || subproject == ":")</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command># temporary, similar to update_automation (not that advanced)
d=/root/github.com/SUSE/cloud/
if [ ! -e  $d ] ; then
  mkdir -p /root/github.com/SUSE
  git clone git@github.com:SUSE/cloud.git $d
fi
pushd $d
git pull
popd
rm -rf cloud/
mkdir -p cloud
rsync -av $d/scripts ./cloud/

# Cleanup isos from old builds
rm -f scripts/release-mgmt/*Media1.iso

# options
export RPM_DEPCHECK=1
export SRCRPM_DEPCHECK=0

if [[ "$project" == "Devel:Cloud:Shared:11-SP3:Update" ]]; then
    export RPM_DEPCHECK_MEDIADEPS=" "
    export SRCRPM_DEPCHECK_MEDIADEPS=" "
    export INSTALLCHECK_EXTRA_OPTS="--exclude pattern:"
fi

OBS_PROJECT=$project
stage=$subproject
[[ $stage == ":" ]] &amp;&amp; stage=


if [ -n "$stage" ]; then
    if [ "${OBS_PROJECT##*\/}" != "${OBS_PROJECT}" ]; then
        OBS_PROJECT=${OBS_PROJECT%%\/*}$stage/${OBS_PROJECT##*\/}
    else
        OBS_PROJECT=${OBS_PROJECT%%\/*}$stage    
    fi
fi

OBS_TYPE=IBS OBS_PROJECT=$OBS_PROJECT make -C cloud/scripts/release-mgmt/ mediacheck
RETVAL=$?

# Cleanup
rm -r cloud/scripts/release-mgmt/*.iso
#if [[ "$OBS_PROJECT" == *Staging ]] ; then
#  [ $RETVAL -eq 0 ] &amp;&amp; automation/scripts/jenkins/jenkins-job-trigger openstack-submit-project -p project="${OBS_PROJECT%:Staging}" subproject="Staging" packagefilter="_product"
#fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
    <sorter class="hudson.matrix.NoopMatrixConfigurationSorter"/>
  </executionStrategy>
</matrix-project>
