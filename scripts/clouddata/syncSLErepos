#!/bin/bash
r=/srv/nfs/repos/

# disable/debug rsync with E=echo
E=echo
E=

# disable/debug {u,}mount with M=echo
M=echo
M=

# debug/test rsync with DRY=--dry-run
DRY=--dry-run
DRY=

rsync="$E rsync $DRY --bwlimit 10000 --delete-after -avH --no-owner --no-group --exclude=*src.rpm "

# http://download.suse.de/ibs/Devel:/Cloud:/4/images/*qcow2 -> images/SLES11-SP3-x86_64-cfntools.qcow2

buildncc=/mnt/euklid/mirror/SuSE/build-ncc.suse.de/
buildsuse=/mnt/euklid/mirror/SuSE/build.suse.de/
ibsmaint=/mnt/dist/ibs/SUSE\:/Maintenance\:/Test\:/

# SLE11 SP3
echo ================== Updating SLE 11 SP3
$rsync /mnt/euklid/mirror/SuSE/zypp-patches.suse.de/x86_64/update/SLE-SERVER/11-SP3-POOL/ /srv/nfs/repos/SLES11-SP3-Pool/
$rsync /mnt/euklid/mirror/SuSE/zypp-patches.suse.de/x86_64/update/SLE-HAE/11-SP3-POOL/ /srv/nfs/repos/SLE11-HAE-SP3-Pool/
$rsync $buildncc/SUSE/Updates/SLE-SERVER/11-SP3/x86_64/update/ /srv/nfs/repos/SLES11-SP3-Updates/
$rsync $buildncc/SUSE/Updates/SLE-HAE/11-SP3/x86_64/update/ /srv/nfs/repos/SLE11-HAE-SP3-Updates/
$rsync $ibsmaint/SLE-SERVER\:/11-SP3\:/x86_64/update/ /srv/nfs/repos/SLES11-SP3-Updates-test/
$rsync $ibsmaint/SLE-HAE\:/11-SP3\:/x86_64/update/ /srv/nfs/repos/SLE11-HAE-SP3-Updates-test/
/usr/local/bin/miniuprepo /srv/nfs/repos/SLES11-SP3-Updates/


##############
# SLE 12
##############

for servicepack in 0 1 2; do
    # fetch latest code from service pack in development (not just latest beta)
    sync_from_ibs=
    [ $servicepack -eq 2 ] && sync_from_ibs=1

    if [ $servicepack -eq 0 ]; then
        version=12
        repo_version="12-GA"
    else
        version="12-SP$servicepack"
        repo_version="$version"
    fi
    chef_version="12.$servicepack"

    for arch in x86_64 s390x aarch64; do
        # only x86_64 for SP0
        [ "$arch" != x86_64 -a $servicepack -eq 0 ] && continue
        [ "$arch" = "aarch64" -a $servicepack -eq 1 ] && continue
        install_subdir="/$arch"
        # no subdir for /install for SP0
        [ $servicepack -eq 0 ] && install_subdir=

        echo ================== Updating SLE 12 SP$servicepack for $arch

        if test -d /mnt/dist/install/SLP/SLE-$version-Server-GM/$arch/DVD1/ ; then
            $rsync /mnt/dist/install/SLP/SLE-$version-Server-GM/$arch/DVD1/ /srv/nfs/suse-${chef_version}${install_subdir}/install/
        else
            $rsync /mnt/dist/install/SLP/SLE-$version-Server-LATEST/$arch/DVD1/ /srv/nfs/suse-${chef_version}${install_subdir}/install/
        fi

        # SLES pool
        if [ -z "$sync_from_ibs" ]; then
            $rsync --link-dest /srv/nfs/suse-${chef_version}${install_subdir}/install/suse/ $buildsuse/SUSE/Products/SLE-SERVER/$version/$arch/product/ /srv/nfs/repos/$arch/SLES$repo_version-Pool/
        else
            $rsync --link-dest /srv/nfs/suse-${chef_version}${install_subdir}/install/suse/ /mnt/dist/ibs/SUSE\:/SLE-$version\:/GA/images/repo/SLE-$version-Server-POOL-$arch-Build*-Media1/ /srv/nfs/repos/$arch/SLES$repo_version-Pool/
        fi
        # SLES updates
        $rsync $buildsuse/SUSE/Updates/SLE-SERVER/$version/$arch/update/ /srv/nfs/repos/$arch/SLES$repo_version-Updates/
        [ "$arch" == x86_64 ] && /usr/local/bin/miniuprepo /srv/nfs/repos/$arch/SLES$repo_version-Updates/
        # SLES test updates
        if test -d $ibsmaint/SLE-SERVER\:/$version\:/$arch/update/ ; then
            $rsync $ibsmaint/SLE-SERVER\:/$version\:/$arch/update/ /srv/nfs/repos/$arch/SLES$repo_version-Updates-test/
        fi

        # HA is only for > SP1, and not for ARM
        if [ $servicepack -gt 0 -a "$arch" != aarch64 ]; then
            # HA pool
            if [ -z "$sync_from_ibs" ]; then
                $rsync $buildsuse/SUSE/Products/SLE-HA/$version/$arch/product/ /srv/nfs/repos/$arch/SLE$repo_version-HA-Pool/
            else
                $rsync /mnt/dist/ibs/SUSE\:/SLE-$version\:/GA/images/repo/SLE-$version-HA-POOL-$arch-Build*-Media1/ /srv/nfs/repos/$arch/SLE$repo_version-HA-Pool/
            fi
            # HA updates
            $rsync $buildsuse/SUSE/Updates/SLE-HA/$version/$arch/update/ /srv/nfs/repos/$arch/SLE$repo_version-HA-Updates/
            # HA test updates
            if test -d $ibsmaint/SLE-HA\:/$version\:/$arch/update/ ; then
                $rsync $ibsmaint/SLE-HA\:/$version\:/$arch/update/ /srv/nfs/repos/$arch/SLE$repo_version-HA-Updates-test/
            fi
        fi
    done
done


##############
# Storage
##############

for version in 1.0 2.1 3; do

    for arch in x86_64 aarch64; do
        [ "$arch" != x86_64 -a $version = 1.0 ] && continue
        [ "$arch" != x86_64 -a $version = 2.1 ] && continue

        echo ================== Updating Storage $version

        $rsync $buildsuse/SUSE/Products/Storage/$version/$arch/product/ /srv/nfs/repos/$arch/SUSE-Enterprise-Storage-$version-Pool

        if test -d $buildsuse/SUSE/Updates/Storage/$version/$arch/update/; then
            $rsync $buildsuse/SUSE/Updates/Storage/$version/$arch/update/ /srv/nfs/repos/$arch/SUSE-Enterprise-Storage-$version-Updates
        fi

        if test -d $ibsmaint/Storage\:/$version\:/$arch/update/; then
            $rsync $ibsmaint/Storage\:/$version\:/$arch/update/ /srv/nfs/repos/$arch/SUSE-Enterprise-Storage-$version-Updates-Test
        fi
    done
done


##############
# Cloud
##############

function mount_and_rsync {
    local from=$1
    local to=$2
    local oneiso=`ls $from | tail -1`
    if [ -e "$oneiso" ] ; then
        $M mount -o loop,ro "$oneiso" /mnt/cloud
        [ $? == 0 ] && $rsync /mnt/cloud/ /srv/nfs/repos/$to/
        $M umount /mnt/cloud
    fi
}

for version in 4 5; do
    echo ================== Updating Cloud $version

    if test -d /mnt/dist/install/SLP/SUSE-Cloud-$version-GM/; then
        $rsync /mnt/dist/install/SLP/SUSE-Cloud-$version-GM/x86_64/DVD1/ /srv/nfs/repos/SUSE-Cloud-$version-official
    else
        mount_and_rsync "/mnt/dist/ibs/SUSE:/SLE-11-SP3:/Update:/Cloud$version:/Test/images/iso/*Media1.iso" SUSE-Cloud-$version-official
    fi
    mount_and_rsync "/mnt/dist/ibs/Devel\:/Cloud\:/$version/images/iso/SUSE-CLOUD-$version-x86_64-Build[0-9][0-9][0-9][0-9]-Media1.iso" SUSE-Cloud-$version-devel
    mount_and_rsync "/mnt/dist/ibs/Devel\:/Cloud\:/$version\:/Staging/images/iso/SUSE-CLOUD-$version-x86_64-Build[0-9][0-9][0-9][0-9]-Media1.iso" SUSE-Cloud-$version-devel-staging

    $rsync /mnt/euklid/mirror/SuSE/zypp-patches.suse.de/x86_64/update/SUSE-CLOUD/$version-POOL/ /srv/nfs/repos/SUSE-Cloud-$version-Pool/
    $rsync $buildncc/SUSE/Updates/SUSE-CLOUD/$version/x86_64/update/ /srv/nfs/repos/SUSE-Cloud-$version-Updates/
    if test -d $ibsmaint/Cloud\:/$version\:/$arch/update/; then
        $rsync $ibsmaint/Cloud\:/$version\:/$arch/update/ /srv/nfs/repos/$arch/SUSE-Cloud-$version-Updates-test/
    fi
done

mount_and_rsync "/mnt/dist/ibs/Devel:/Cloud:/Shared:/11-SP3:/Update/images/iso/SUSE-CLOUD-*11-SP3-DEPS-x86_64-Build[0-9][0-9][0-9][0-9]-Media.iso" SUSE-Cloud-SLE-11-SP3-deps

echo ================== Updating Cloud 5 for SLE12

$rsync /mnt/dist/install/SLP/SLE-12-Module-Public-Cloud-GM/x86_64/CD1/ /srv/nfs/repos/SUSE-Cloud-5-SLE-12-official
mount_and_rsync "/mnt/dist/ibs/Devel:/Cloud:/5/images/iso/SUSE-SLE12-CLOUD-5-COMPUTE-x86_64-Build[0-9][0-9][0-9][0-9]-Media1.iso" SUSE-Cloud-5-SLE-12-devel
mount_and_rsync "/mnt/dist/ibs/Devel:/Cloud:/5:/Staging/images/iso/SUSE-SLE12-CLOUD-5-COMPUTE-x86_64-Build[0-9][0-9][0-9][0-9]-Media1.iso" SUSE-Cloud-5-SLE-12-devel-staging
$rsync $buildsuse/SUSE/Products/12-Cloud-Compute/5/x86_64/product/ /srv/nfs/repos/SUSE-Cloud-5-SLE-12-Pool/
$rsync $buildsuse/SUSE/Updates/12-Cloud-Compute/5/x86_64/update/ /srv/nfs/repos/SUSE-Cloud-5-SLE-12-Updates/
$rsync $ibsmaint/12-Cloud-Compute\:/5\:/x86_64/update/ /srv/nfs/repos/SUSE-Cloud-5-SLE-12-Updates-test/

# mirror aarch64 SP1 builds
$rsync /mnt/dist/ibs/Devel:/ARM:/SLE-12-SP1:/Update/images/repo/SLE-12-SP1-Server-POOL-aarch64-*-Media1/ /srv/nfs/repos/aarch64/SLES12-SP1-Pool

for version in 6 7; do
    # fetch latest code from version in development (not just latest beta)
    sync_from_ibs=
    [ "$version" == "7" ] && sync_from_ibs=1
    servicepack=1
    [ "$version" == "7" ] && servicepack=2

    for arch in x86_64 s390x aarch64; do
        # no ARM for Cloud <= 6
        [ "$arch" == aarch64 -a $version -le 6 ] && continue

        echo ================== Updating Cloud $version for $arch

        if [ -z "$sync_from_ibs" ]; then
            $rsync /mnt/dist/install/SLP/SLE-12-SP$servicepack-Cloud$version-GM/$arch/DVD1/ /srv/nfs/repos/$arch/SUSE-OpenStack-Cloud-$version-official
        else
            mount_and_rsync "/mnt/dist/ibs/SUSE:/SLE-12-SP$servicepack:/Update:/Products:/Cloud$version/images/iso/SUSE-OPENSTACK-CLOUD-$version-$arch-Build[0-9][0-9][0-9][0-9]-Media1.iso" $arch/SUSE-OpenStack-Cloud-$version-official
        fi

        mount_and_rsync "/mnt/dist/ibs/Devel\:/Cloud\:/$version/images/iso/SUSE-OPENSTACK-CLOUD-$version-$arch-Build[0-9][0-9][0-9][0-9]-Media1.iso" $arch/SUSE-OpenStack-Cloud-$version-devel
        mount_and_rsync "/mnt/dist/ibs/Devel\:/Cloud\:/$version\:/Staging/images/iso/SUSE-OPENSTACK-CLOUD-$version-$arch-Build[0-9][0-9][0-9][0-9]-Media1.iso" $arch/SUSE-OpenStack-Cloud-$version-devel-staging

        if test -d $buildsuse/SUSE/Products/OpenStack-Cloud/$version/$arch/product/ ; then
            $rsync $buildsuse/SUSE/Products/OpenStack-Cloud/$version/$arch/product/ /srv/nfs/repos/$arch/SUSE-OpenStack-Cloud-$version-Pool/
        fi

        if test -d $buildsuse/SUSE/Updates/OpenStack-Cloud/$version/$arch/update/ ; then
            $rsync $buildsuse/SUSE/Updates/OpenStack-Cloud/$version/$arch/update/ /srv/nfs/repos/$arch/SUSE-OpenStack-Cloud-$version-Updates/
        fi

        if test -d $ibsmaint/OpenStack-Cloud\:/$version\:/$arch/update/; then
            $rsync $ibsmaint/OpenStack-Cloud\:/$version\:/$arch/update/ /srv/nfs/repos/$arch/SUSE-OpenStack-Cloud-$version-Updates-test/
        fi
    done
done

~/bin/syncgitrepos
